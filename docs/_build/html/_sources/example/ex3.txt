.. _example3:

Example 3 : Forward declaration with Forward()
==============================================

This example explains :class:`Forward()` class.

**Code** ::

    from eudtrg import *

    LoadMap("basemap.scx")

    a = Forward() # Forward will be described at :ref:`example3`
    b = Forward()
    c = Forward()
    d = Forward()
    e = Forward()
    f = Forward()


    a << Trigger(nextptr = b,          actions = [DisplayText("Trigger A")]) # b is executed after a
    b << Trigger(nextptr = d,          actions = [DisplayText("Trigger B")]) # d is executed after b
    c << Trigger(nextptr = e,          actions = [DisplayText("Trigger C")]) # e is executed after c
    d << Trigger(nextptr = c,          actions = [DisplayText("Trigger D")]) # c is executed after d
    e << Trigger(nextptr = f,          actions = [DisplayText("Trigger E")]) # f is executed after e
    f << Trigger(nextptr = triggerend, actions = [DisplayText("Trigger F")]) # No trigger is executed after f.



    psw = InitPlayerSwitch([a, b, c, d, e, f, None, None])
    # P1, P2, P3, P4, P5, P6 each starts trigger execution with a, b, c, d, e, f.


    SaveMap("ex2.scx", psw) # ex2.scx에 트리거를 넣는다.


**Output** ::

    P1
    Trigger A
    Trigger B
    Trigger D
    Trigger C
    Trigger E
    Trigger F

    P2
    Trigger B
    Trigger D
    Trigger C
    Trigger E
    Trigger F

    P3
    Trigger C
    Trigger E
    Trigger F

    P4
    Trigger D
    Trigger C
    Trigger E
    Trigger F

    P5
    Trigger E
    Trigger F

    P6
    Trigger F
    
    (Text are repeated for all players)


**Description**

Execution order of triggers are controlled by nextptr. Each trigger has nextptr
which points to trigger to be executed next. We set different starting trigger
for P1~P6, so trigger executed by different players differ.