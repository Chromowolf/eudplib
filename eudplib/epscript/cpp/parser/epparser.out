State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk
          chunks ::= * chunks error

                       program accept
                        chunks shift  18
                     {default} reduce 1

State 1:
          method_chunk ::= method_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  302
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 2:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  306
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  318
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          foreach_stmt ::= foreach_header RPAREN * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  327
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          for_stmt ::= for_header RPAREN * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  329
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          while_stmt ::= while_header RPAREN * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  342
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_block ::= if_block elif_header RPAREN * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  348
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= if_header RPAREN * stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  350
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 9:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_block ::= once_nocond * stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  353
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 10:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_block ::= once_header RPAREN * stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  354
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 11:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          blockStmtSub ::= * lbracket
     (40) blockStmtSub ::= lbracket *
          blockStmtSub ::= * lbracket bodyStmtList
          blockStmtSub ::= lbracket * bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  275
                     vdef_stmt shift  274
                     blockStmt shift  399
                      bodyStmt shift  345
                      lbracket shift  11
                  blockStmtSub shift  118
                  bodyStmtList shift  17
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207
                     {default} reduce 40

State 12:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          expr ::= lambdaExprStart * stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  276
                     vdef_stmt shift  274
                     blockStmt shift  399
                          stmt shift  317
                      bodyStmt shift  404
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207

State 13:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (184) default_chunk ::= default_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  380
                     vdef_stmt shift  274
                     blockStmt shift  399
                      bodyStmt shift  381
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207
                     {default} reduce 184

State 14:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (183) default_chunk ::= default_clause *
          default_chunk ::= default_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                     vdef_stmt shift  274
                     blockStmt shift  399
                      bodyStmt shift  345
                      lbracket shift  11
                  blockStmtSub shift  118
                  bodyStmtList shift  13
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207
                     {default} reduce 183

State 15:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (179) case_chunk ::= case_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  380
                     vdef_stmt shift  274
                     blockStmt shift  399
                      bodyStmt shift  381
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207
                     {default} reduce 179

State 16:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (178) case_chunk ::= case_clause *
          case_chunk ::= case_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                     vdef_stmt shift  274
                     blockStmt shift  399
                      bodyStmt shift  345
                      lbracket shift  11
                  blockStmtSub shift  118
                  bodyStmtList shift  15
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207
                     {default} reduce 178

State 17:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
     (41) blockStmtSub ::= lbracket bodyStmtList *
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                     SEMICOLON shift  398
                          NAME shift  157
                      FUNCTION shift  278
                      LBRACKET shift  403
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                        STATIC shift  231
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  355
                            IF shift  351
                    SWITCHCASE shift  220
                         WHILE shift  343
                           FOR shift  214
                       FOREACH shift  209
                      CONTINUE shift  326
                         BREAK shift  325
                        RETURN shift  29
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  205
                         error shift  380
                     vdef_stmt shift  274
                     blockStmt shift  399
                      bodyStmt shift  381
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  273
               vdefAssign_stmt shift  272
                     cdef_stmt shift  271
                   assign_stmt shift  270
                  funcexprStmt shift  269
                    actionStmt shift  391
                     once_stmt shift  390
                       if_stmt shift  389
                    while_stmt shift  388
                      for_stmt shift  387
                  foreach_stmt shift  386
               switchcase_stmt shift  385
                 continue_stmt shift  268
                    break_stmt shift  267
                   return_stmt shift  266
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
                    once_start shift  227
                   once_header shift  226
                    once_block shift  352
                   once_nocond shift  9
                      if_start shift  225
                     if_header shift  224
                      if_block shift  98
             switchcase_header shift  219
              switchcase_block shift  217
                   while_start shift  216
                  while_header shift  215
                    for_opener shift  19
                   for_header1 shift  49
                   for_header2 shift  21
                    for_header shift  210
                foreach_opener shift  110
                foreach_header shift  207
                     {default} reduce 41

State 18:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunks ::= chunks * error
          chunk ::= * relimp_chunk
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          relimp_start ::= * IMPORT PERIOD
          relimp_start ::= * relimp_start PERIOD
          relimp_path ::= * relimp_start NAME
          relimp_path ::= * relimp_path PERIOD NAME
          relimp_chunk ::= * relimp_path SEMICOLON
          relimp_chunk ::= * relimp_path AS NAME SEMICOLON
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON
          object_body ::= * OBJECT NAME LBRACKET
          object_body ::= * object_body VAR typedNameList_nonEmpty SEMICOLON
          object_body ::= * object_body method_chunk
          object_chunk ::= * object_body RBRACKET SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  105
                      FUNCTION shift  290
                        OBJECT shift  196
                      LBRACKET shift  403
                           VAR shift  107
                         CONST shift  106
                         error shift  427
                         chunk shift  428
                  relimp_chunk shift  426
                  import_chunk shift  299
                    fdef_chunk shift  424
                   fdecl_chunk shift  423
                  object_chunk shift  422
                     vdef_stmt shift  298
        vdefAssign_global_stmt shift  297
              cdef_global_stmt shift  296
                     blockStmt shift  418
                  relimp_start shift  186
                   relimp_path shift  175
                   fdef_header shift  2
                   object_body shift  101
                      lbracket shift  11
                  blockStmtSub shift  118

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (199) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  278
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                     vdef_stmt shift  340
               vdefAssign_stmt shift  339
                     cdef_stmt shift  338
                   assign_stmt shift  337
                          expr shift  143
                      funcexpr shift  286
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
        for_init_stmt_nonEmpty shift  213
                 for_init_stmt shift  212
                     {default} reduce 199

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  278
                           VAR shift  113
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                     vdef_stmt shift  340
               vdefAssign_stmt shift  339
                     cdef_stmt shift  338
                   assign_stmt shift  337
                          expr shift  143
                      funcexpr shift  286
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
        for_init_stmt_nonEmpty shift  336

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (203) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                   assign_stmt shift  332
                  funcexprStmt shift  333
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
      for_action_stmt_nonEmpty shift  211
               for_action_stmt shift  330
                     {default} reduce 203

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                   assign_stmt shift  332
                  funcexprStmt shift  333
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  180
      for_action_stmt_nonEmpty shift  331

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArg ::= * NAME ASSIGN STRING
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (92) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  185
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  368
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  146
                      funcexpr shift  286
               lambdaExprStart shift  12
                          fArg shift  367
                fArgs_nonEmpty shift  238
                         fArgs shift  204
                     {default} reduce 92

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArg ::= * NAME ASSIGN STRING
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (92) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  185
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  368
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  146
                      funcexpr shift  286
               lambdaExprStart shift  12
                          fArg shift  367
                fArgs_nonEmpty shift  238
                         fArgs shift  236
                     {default} reduce 92

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArg ::= * NAME ASSIGN STRING
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (92) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  185
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  368
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  146
                      funcexpr shift  286
               lambdaExprStart shift  12
                          fArg shift  367
                fArgs_nonEmpty shift  238
                         fArgs shift  235
                     {default} reduce 92

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArg ::= * NAME ASSIGN STRING
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (92) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  185
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  368
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  146
                      funcexpr shift  286
               lambdaExprStart shift  12
                          fArg shift  367
                fArgs_nonEmpty shift  238
                         fArgs shift  199
                     {default} reduce 92

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArg ::= * NAME ASSIGN STRING
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (92) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  185
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  368
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  146
                      funcexpr shift  286
               lambdaExprStart shift  12
                          fArg shift  367
                fArgs_nonEmpty shift  238
                         fArgs shift  198
                     {default} reduce 92

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArg ::= * NAME ASSIGN STRING
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (92) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= KILLS LPAREN * fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  185
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  368
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  146
                      funcexpr shift  286
               lambdaExprStart shift  12
                          fArg shift  367
                fArgs_nonEmpty shift  238
                         fArgs shift  197
                     {default} reduce 92

State 29:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
     (77) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          return_stmt ::= RETURN * exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  206
                          expr shift  142
                      funcexpr shift  264
                      exprList shift  324
               lambdaExprStart shift  12
                     {default} reduce 77

State 30:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= case_chunks * case_chunk
          default_clause ::= * DEFAULT COLON
          default_chunk ::= * default_clause
          default_chunk ::= * default_clause bodyStmtList
          switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks * default_chunk
    (186) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks *

                          CASE shift  347
                       DEFAULT shift  202
                    case_start shift  35
                   case_clause shift  16
                    case_chunk shift  322
                default_clause shift  14
                 default_chunk shift  320
                     {default} reduce 186

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArg ::= * NAME ASSIGN STRING
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArg
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  185
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  368
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  146
                      funcexpr shift  286
               lambdaExprStart shift  12
                          fArg shift  366

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  188
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  189
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  208
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 35:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          case_clause ::= case_start * exprList_nonEmpty COLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  179
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= DEC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  143
                      funcexpr shift  286
               lambdaExprStart shift  12
                        lvalue shift  356

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= INC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  143
                      funcexpr shift  286
               lambdaExprStart shift  12
                        lvalue shift  357

State 38:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  228
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  143
                      funcexpr shift  286
               lambdaExprStart shift  12
                        lvalue shift  358

State 40:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  229
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 41:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  230
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 42:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  232
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 43:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= LIST LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  114
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 44:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= VARRAY LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  115
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 45:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  116
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 46:
          fdef_rettypes ::= COLON * exprList_nonEmpty
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
             exprList_nonEmpty shift  287
                          expr shift  142
                      funcexpr shift  264
               lambdaExprStart shift  12

State 47:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= * case_chunks case_chunk
          case_chunks ::= * case_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks
    (187) switchcase_block ::= switchcase_header RPAREN LBRACKET *

                          CASE shift  347
                    case_start shift  35
                   case_clause shift  16
                    case_chunk shift  319
                   case_chunks shift  30
                     {default} reduce 187

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= NAME ASSIGN * expr
          fArg ::= NAME ASSIGN * STRING
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                        STRING shift  311
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  125
                      funcexpr shift  286
               lambdaExprStart shift  12

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          for_header2 ::= for_header1 * expr SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  120
                      funcexpr shift  286
               lambdaExprStart shift  12

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          while_header ::= while_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  126
                      funcexpr shift  286
               lambdaExprStart shift  12

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          switchcase_header ::= SWITCHCASE LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  127
                      funcexpr shift  286
               lambdaExprStart shift  12

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          elif_header ::= elif_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  128
                      funcexpr shift  286
               lambdaExprStart shift  12

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          if_header ::= if_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  129
                      funcexpr shift  286
               lambdaExprStart shift  12

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          once_header ::= once_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  130
                      funcexpr shift  286
               lambdaExprStart shift  12

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBXR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  131
                      funcexpr shift  286
               lambdaExprStart shift  12

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBOR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  132
                      funcexpr shift  286
               lambdaExprStart shift  12

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBND * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  133
                      funcexpr shift  286
               lambdaExprStart shift  12

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IRSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  134
                      funcexpr shift  286
               lambdaExprStart shift  12

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ILSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  135
                      funcexpr shift  286
               lambdaExprStart shift  12

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMOD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  136
                      funcexpr shift  286
               lambdaExprStart shift  12

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IDIV * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  137
                      funcexpr shift  286
               lambdaExprStart shift  12

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMUL * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  138
                      funcexpr shift  286
               lambdaExprStart shift  12

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ISUB * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  139
                      funcexpr shift  286
               lambdaExprStart shift  12

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IADD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  140
                      funcexpr shift  286
               lambdaExprStart shift  12

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ASSIGN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  141
                      funcexpr shift  286
               lambdaExprStart shift  12

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= LNOT * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  149
                      funcexpr shift  286
               lambdaExprStart shift  12

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  169
                      funcexpr shift  286
               lambdaExprStart shift  12

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  170
                      funcexpr shift  286
               lambdaExprStart shift  12

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  171
                      funcexpr shift  286
               lambdaExprStart shift  12

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= L2V LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  121
                      funcexpr shift  286
               lambdaExprStart shift  12

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
     (99) commaSkippable ::= COMMA *
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  147
                      funcexpr shift  286
               lambdaExprStart shift  12
                     {default} reduce 99

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  122
                      funcexpr shift  286
               lambdaExprStart shift  12

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  123
                      funcexpr shift  286
               lambdaExprStart shift  12

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= expr LOR * expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  148
                      funcexpr shift  286
               lambdaExprStart shift  12

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= expr LAND * expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  150
                      funcexpr shift  286
               lambdaExprStart shift  12

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= expr GT * expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  151
                      funcexpr shift  286
               lambdaExprStart shift  12

State 77:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= expr LT * expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  152
                      funcexpr shift  286
               lambdaExprStart shift  12

State 78:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= expr GE * expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  153
                      funcexpr shift  286
               lambdaExprStart shift  12

State 79:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= expr LE * expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  154
                      funcexpr shift  286
               lambdaExprStart shift  12

State 80:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= expr NE * expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  155
                      funcexpr shift  286
               lambdaExprStart shift  12

State 81:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= expr EQ * expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  156
                      funcexpr shift  286
               lambdaExprStart shift  12

State 82:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  162
                      funcexpr shift  286
               lambdaExprStart shift  12

State 83:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  161
                      funcexpr shift  286
               lambdaExprStart shift  12

State 84:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  163
                      funcexpr shift  286
               lambdaExprStart shift  12

State 85:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  164
                      funcexpr shift  286
               lambdaExprStart shift  12

State 86:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  165
                      funcexpr shift  286
               lambdaExprStart shift  12

State 87:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  172
                      funcexpr shift  286
               lambdaExprStart shift  12

State 88:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  173
                      funcexpr shift  286
               lambdaExprStart shift  12

State 89:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  174
                      funcexpr shift  286
               lambdaExprStart shift  12

State 90:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  166
                      funcexpr shift  286
               lambdaExprStart shift  12

State 91:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  167
                      funcexpr shift  286
               lambdaExprStart shift  12

State 92:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK expr COLON * expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  144
                      funcexpr shift  286
               lambdaExprStart shift  12

State 93:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK * expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  124
                      funcexpr shift  286
               lambdaExprStart shift  12

State 94:
          typedName ::= NAME COLON * expr
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  145
                      funcexpr shift  286
               lambdaExprStart shift  12

State 95:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  119
                      funcexpr shift  286
               lambdaExprStart shift  12

State 96:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  66
                          PLUS shift  69
                         MINUS shift  68
                        BITNOT shift  67
                        LPAREN shift  72
                    LSQBRACKET shift  45
                          NAME shift  279
                      FUNCTION shift  278
                        NUMBER shift  406
                         KILLS shift  280
                           L2V shift  259
                     MAPSTRING shift  258
                          UNIT shift  255
                        SWITCH shift  252
                      LOCATION shift  249
                    STATTXTTBL shift  246
                        VARRAY shift  243
                          LIST shift  241
                 CONDITIONNAME shift  239
                    ACTIONNAME shift  237
                          expr shift  147
                      funcexpr shift  286
               lambdaExprStart shift  12

State 97:
          method_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (69) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  277
                 typedNameList shift  191
        typedNameList_nonEmpty shift  315
                     typedName shift  201
                     {default} reduce 69

State 98:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN expr
          if_block ::= if_block * elif_header RPAREN stmt
          else_header ::= * ELSE
    (173) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  223
                    elif_start shift  222
                   elif_header shift  221
                   else_header shift  3
                     {default} reduce 173

State 99:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (69) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN * typedNameList RPAREN fdef_rettypes

                          NAME shift  277
                 typedNameList shift  200
        typedNameList_nonEmpty shift  315
                     typedName shift  201
                     {default} reduce 69

State 100:
          fdef_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN * typedNameList RPAREN SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (69) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  277
                 typedNameList shift  288
        typedNameList_nonEmpty shift  315
                     typedName shift  201
                     {default} reduce 69

State 101:
          object_body ::= object_body * VAR typedNameList_nonEmpty SEMICOLON
          method_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          method_chunk ::= * method_header stmt
          object_body ::= object_body * method_chunk
          object_chunk ::= object_body * RBRACKET SEMICOLON

                      FUNCTION shift  193
                           VAR shift  102
                      RBRACKET shift  190
                 method_header shift  1
                  method_chunk shift  301

State 102:
          object_body ::= object_body VAR * typedNameList_nonEmpty SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty

                          NAME shift  277
        typedNameList_nonEmpty shift  194
                     typedName shift  201

State 103:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
          typedNameList_nonEmpty ::= typedName COMMA * typedNameList_nonEmpty

                          NAME shift  277
        typedNameList_nonEmpty shift  316
                     typedName shift  201

State 104:
     (23) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN * SEMICOLON

                     SEMICOLON shift  307
                         COLON shift  46
                 fdef_rettypes shift  308
                     {default} reduce 23

State 105:
          relimp_start ::= IMPORT * PERIOD
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                        PERIOD shift  417
                          NAME shift  416
                    dottedName shift  187

State 106:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  362
             nameList_nonEmpty shift  176

State 107:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  362
             nameList_nonEmpty shift  177

State 108:
     (23) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  46
                 fdef_rettypes shift  303
                     {default} reduce 23

State 109:
     (23) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  46
                 fdef_rettypes shift  314
                     {default} reduce 23

State 110:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty

                          NAME shift  362
             nameList_nonEmpty shift  178

State 111:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  362
             nameList_nonEmpty shift  181

State 112:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  362
             nameList_nonEmpty shift  182

State 113:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  362
             nameList_nonEmpty shift  183

State 114:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
    (100) commaSkippable ::= *
          expr ::= LIST LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  71
                commaSkippable shift  240
                     {default} reduce 100

State 115:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
    (100) commaSkippable ::= *
          expr ::= VARRAY LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  71
                commaSkippable shift  242
                     {default} reduce 100

State 116:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
    (100) commaSkippable ::= *
          expr ::= LSQBRACKET exprList_nonEmpty * commaSkippable RSQBRACKET

                         COMMA shift  71
                commaSkippable shift  234
                     {default} reduce 100

State 117:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  262
              numList_nonEmpty shift  184

State 118:
          rbracket ::= * RBRACKET
          blockStmt ::= blockStmtSub * rbracket

                      RBRACKET shift  402
                      rbracket shift  401

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                    RSQBRACKET shift  309

State 120:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          for_header2 ::= for_header1 expr * SEMICOLON

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     SEMICOLON shift  334

State 121:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= L2V LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                        RPAREN shift  376

State 122:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                        RPAREN shift  379

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                    RSQBRACKET shift  158

State 124:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr QMARK expr * COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                         COLON shift  92

State 125:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (88) fArg ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 88

State 126:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (190) while_header ::= while_start LPAREN expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 190

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (175) switchcase_header ::= SWITCHCASE LPAREN expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 175

State 128:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (170) elif_header ::= elif_start LPAREN expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 170

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (167) if_header ::= if_start LPAREN expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 167

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (161) once_header ::= once_start LPAREN expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 161

State 131:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (159) assign_stmt ::= lvalue IBXR expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 159

State 132:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (158) assign_stmt ::= lvalue IBOR expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 158

State 133:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (157) assign_stmt ::= lvalue IBND expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 157

State 134:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (156) assign_stmt ::= lvalue IRSH expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 156

State 135:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (155) assign_stmt ::= lvalue ILSH expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 155

State 136:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (154) assign_stmt ::= lvalue IMOD expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 154

State 137:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (153) assign_stmt ::= lvalue IDIV expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 153

State 138:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (152) assign_stmt ::= lvalue IMUL expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 152

State 139:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (151) assign_stmt ::= lvalue ISUB expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 151

State 140:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (150) assign_stmt ::= lvalue IADD expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 150

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (144) assign_stmt ::= lvalue ASSIGN expr *

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 144

State 142:
     (75) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 75

State 143:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  73
                        PERIOD shift  265

State 144:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
    (110) expr ::= expr QMARK expr COLON expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 110

State 145:
     (66) typedName ::= NAME COLON expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 66

State 146:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (86) fArg ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 86

State 147:
     (76) exprList_nonEmpty ::= exprList_nonEmpty COMMA expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  93
                           LOR shift  74
                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 76

State 148:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (131) expr ::= expr LOR expr *

                          LAND shift  75
                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 131

State 149:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (132) expr ::= LNOT expr *

                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 132

State 150:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
    (130) expr ::= expr LAND expr *
          expr ::= expr * LOR expr

                            EQ shift  81
                            LE shift  79
                            LT shift  77
                            GE shift  78
                            GT shift  76
                            NE shift  80
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 130

State 151:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
    (129) expr ::= expr GT expr *
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 129

State 152:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
    (128) expr ::= expr LT expr *
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 128

State 153:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
    (127) expr ::= expr GE expr *
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 127

State 154:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
    (126) expr ::= expr LE expr *
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 126

State 155:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
    (125) expr ::= expr NE expr *
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 125

State 156:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
    (124) expr ::= expr EQ expr *
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  83
                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 124

State 157:
     (81) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (139) lvalue ::= NAME *

                        ASSIGN reduce 139
                         COMMA reduce 139
                        LPAREN shift  27
                     SEMICOLON reduce 139
                        RPAREN reduce 139
                           INC reduce 139
                           DEC reduce 139
                          IADD reduce 139
                          ISUB reduce 139
                          IMUL reduce 139
                          IDIV reduce 139
                          IMOD reduce 139
                          ILSH reduce 139
                          IRSH reduce 139
                          IBND reduce 139
                          IBOR reduce 139
                          IBXR reduce 139
                     {default} reduce 81

State 158:
     (83) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (140) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 140
                         COMMA reduce 140
                     SEMICOLON reduce 140
                        RPAREN reduce 140
                           INC reduce 140
                           DEC reduce 140
                          IADD reduce 140
                          ISUB reduce 140
                          IMUL reduce 140
                          IDIV reduce 140
                          IMOD reduce 140
                          ILSH reduce 140
                          IRSH reduce 140
                          IBND reduce 140
                          IBOR reduce 140
                          IBXR reduce 140
                     {default} reduce 83

State 159:
     (82) expr ::= expr PERIOD NAME *
    (141) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 141
                         COMMA reduce 141
                     SEMICOLON reduce 141
                        RPAREN reduce 141
                           INC reduce 141
                           DEC reduce 141
                          IADD reduce 141
                          ISUB reduce 141
                          IMUL reduce 141
                          IDIV reduce 141
                          IMOD reduce 141
                          ILSH reduce 141
                          IRSH reduce 141
                          IBND reduce 141
                          IBOR reduce 141
                          IBXR reduce 141
                     {default} reduce 82

State 160:
    (142) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * INC
          assign_stmt ::= lvalue * DEC
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  65
                           INC shift  360
                           DEC shift  359
                          IADD shift  64
                          ISUB shift  63
                          IMUL shift  62
                          IDIV shift  61
                          IMOD shift  60
                          ILSH shift  59
                          IRSH shift  58
                          IBND shift  57
                          IBOR shift  56
                          IBXR shift  55
                     {default} reduce 142

State 161:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
    (119) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITXOR shift  82
                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 119

State 162:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (120) expr ::= expr BITXOR expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITAND shift  84
                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 120

State 163:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
    (118) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LSHIFT shift  86
                        RSHIFT shift  85
                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 118

State 164:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
    (117) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 117

State 165:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
    (116) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  91
                         MINUS shift  90
                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 116

State 166:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
    (112) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 112

State 167:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
    (111) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  88
                      MULTIPLY shift  89
                           MOD shift  87
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 111

State 168:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (94) funcexprStmt ::= funcexpr *
     (97) expr ::= funcexpr *

                         COMMA reduce 94
                    LSQBRACKET shift  285
                     SEMICOLON reduce 94
                        RPAREN reduce 94
                     {default} reduce 97

State 169:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (123) expr ::= BITNOT expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 123

State 170:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (122) expr ::= MINUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 122

State 171:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (121) expr ::= PLUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 121

State 172:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
    (115) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 115

State 173:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
    (114) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 114

State 174:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
    (113) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  281
                     {default} reduce 113

State 175:
          relimp_path ::= relimp_path * PERIOD NAME
          relimp_chunk ::= relimp_path * SEMICOLON
          relimp_chunk ::= relimp_path * AS NAME SEMICOLON

                        PERIOD shift  293
                     SEMICOLON shift  410
                            AS shift  292

State 176:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  233

State 177:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (133) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  33
                         COMMA shift  233
                     {default} reduce 133

State 178:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty

                         COMMA shift  233
                         COLON shift  34

State 179:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          case_clause ::= case_start exprList_nonEmpty * COLON

                         COMMA shift  96
                         COLON shift  346

State 180:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  38
                         COMMA shift  39

State 181:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  40
                         COMMA shift  233

State 182:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  41
                         COMMA shift  233

State 183:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (133) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  42
                         COMMA shift  233
                     {default} reduce 133

State 184:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  261
                    RSQBRACKET shift  260

State 185:
     (81) expr ::= NAME *
          fArg ::= NAME * ASSIGN expr
          fArg ::= NAME * ASSIGN STRING
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  48
                        LPAREN shift  27
                     {default} reduce 81

State 186:
          relimp_start ::= relimp_start * PERIOD
          relimp_path ::= relimp_start * NAME

                        PERIOD shift  413
                          NAME shift  412

State 187:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (22) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  295
                            AS shift  294
                     {default} reduce 22

State 188:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (138) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 138

State 189:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (136) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 136

State 190:
          object_chunk ::= object_body RBRACKET * SEMICOLON

                     SEMICOLON shift  300

State 191:
          method_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  108

State 192:
          method_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  97

State 193:
          method_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes

                          NAME shift  192

State 194:
          object_body ::= object_body VAR typedNameList_nonEmpty * SEMICOLON

                     SEMICOLON shift  304

State 195:
          object_body ::= OBJECT NAME * LBRACKET

                      LBRACKET shift  305

State 196:
          object_body ::= OBJECT * NAME LBRACKET

                          NAME shift  195

State 197:
          expr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  310

State 198:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  312

State 199:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  313

State 200:
          lambdaExprStart ::= FUNCTION LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  109

State 201:
     (67) typedNameList_nonEmpty ::= typedName *
          typedNameList_nonEmpty ::= typedName * COMMA typedNameList_nonEmpty

                         COMMA shift  103
                     {default} reduce 67

State 202:
          default_clause ::= DEFAULT * COLON

                         COLON shift  321

State 203:
          actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON
    (218) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     SEMICOLON shift  323
                     {default} reduce 218

State 204:
          actionStmt ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  203

State 205:
          actionStmt ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  23

State 206:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
     (78) exprList ::= exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 78

State 207:
          foreach_stmt ::= foreach_header * RPAREN stmt

                        RPAREN shift  4

State 208:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (210) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 210

State 209:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  328

State 210:
          for_stmt ::= for_header * RPAREN stmt

                        RPAREN shift  5

State 211:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (204) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  22
                     {default} reduce 204

State 212:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  335

State 213:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (198) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  20
                     {default} reduce 198

State 214:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  341

State 215:
          while_stmt ::= while_header * RPAREN stmt

                        RPAREN shift  6

State 216:
          while_header ::= while_start * LPAREN expr

                        LPAREN shift  50

State 217:
          switchcase_stmt ::= switchcase_block * RBRACKET

                      RBRACKET shift  344

State 218:
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks
          switchcase_block ::= switchcase_header RPAREN * LBRACKET

                      LBRACKET shift  47

State 219:
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks
          switchcase_block ::= switchcase_header * RPAREN LBRACKET

                        RPAREN shift  218

State 220:
          switchcase_header ::= SWITCHCASE * LPAREN expr

                        LPAREN shift  51

State 221:
          if_block ::= if_block elif_header * RPAREN stmt

                        RPAREN shift  7

State 222:
          elif_header ::= elif_start * LPAREN expr

                        LPAREN shift  52

State 223:
          elif_start ::= ELSE * IF
    (172) else_header ::= ELSE *

                            IF shift  349
                     {default} reduce 172

State 224:
          if_block ::= if_header * RPAREN stmt

                        RPAREN shift  8

State 225:
          if_header ::= if_start * LPAREN expr

                        LPAREN shift  53

State 226:
          once_block ::= once_header * RPAREN stmt

                        RPAREN shift  10

State 227:
          once_header ::= once_start * LPAREN expr
    (163) once_nocond ::= once_start *

                        LPAREN shift  54
                     {default} reduce 163

State 228:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (145) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 145

State 229:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (137) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 137

State 230:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (135) vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 135

State 231:
          vdefAssignStatic_stmt ::= STATIC * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty

                           VAR shift  112

State 232:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (134) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 134

State 233:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  361

State 234:
          expr ::= LSQBRACKET exprList_nonEmpty commaSkippable * RSQBRACKET

                    RSQBRACKET shift  363

State 235:
          expr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  364

State 236:
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  365

State 237:
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  24

State 238:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArg
     (93) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  31
                     {default} reduce 93

State 239:
          expr ::= CONDITIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  25

State 240:
          expr ::= LIST LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  369

State 241:
          expr ::= LIST * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  43

State 242:
          expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  370

State 243:
          expr ::= VARRAY * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  44

State 244:
          expr ::= STATTXTTBL LPAREN STRING * RPAREN

                        RPAREN shift  371

State 245:
          expr ::= STATTXTTBL LPAREN * STRING RPAREN

                        STRING shift  244

State 246:
          expr ::= STATTXTTBL * LPAREN STRING RPAREN

                        LPAREN shift  245

State 247:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  372

State 248:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  247

State 249:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  248

State 250:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  373

State 251:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  250

State 252:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  251

State 253:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  374

State 254:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  253

State 255:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  254

State 256:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  375

State 257:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  256

State 258:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  257

State 259:
          expr ::= L2V * LPAREN expr RPAREN

                        LPAREN shift  70

State 260:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  377

State 261:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  378

State 262:
     (63) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  282
                     {default} reduce 63

State 263:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  117

State 264:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (97) expr ::= funcexpr *

                    LSQBRACKET shift  263
                     {default} reduce 97

State 265:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  159

State 266:
          bodyStmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  382

State 267:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  383

State 268:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  384

State 269:
          bodyStmt ::= funcexprStmt * SEMICOLON

                     SEMICOLON shift  392

State 270:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  393

State 271:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  394

State 272:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  395

State 273:
          bodyStmt ::= vdefAssignStatic_stmt * SEMICOLON

                     SEMICOLON shift  396

State 274:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  397

State 275:
          blockStmt ::= lbracket error * RBRACKET

                      RBRACKET shift  400

State 276:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  405

State 277:
     (65) typedName ::= NAME *
          typedName ::= NAME * COLON expr

                         COLON shift  94
                     {default} reduce 65

State 278:
          lambdaExprStart ::= FUNCTION * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  99

State 279:
     (81) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  27
                     {default} reduce 81

State 280:
     (80) expr ::= KILLS *
          expr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  28
                     {default} reduce 80

State 281:
          expr ::= expr PERIOD * NAME

                          NAME shift  407

State 282:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  408

State 283:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  282

State 284:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  283

State 285:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  284

State 286:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (97) expr ::= funcexpr *

                    LSQBRACKET shift  285
                     {default} reduce 97

State 287:
     (24) fdef_rettypes ::= COLON exprList_nonEmpty *
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr

                         COMMA shift  96
                     {default} reduce 24

State 288:
          fdef_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList * RPAREN SEMICOLON

                        RPAREN shift  104

State 289:
          fdef_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME * LPAREN typedNameList RPAREN SEMICOLON

                        LPAREN shift  100

State 290:
          fdef_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION * NAME LPAREN typedNameList RPAREN SEMICOLON

                          NAME shift  289

State 291:
          relimp_chunk ::= relimp_path AS NAME * SEMICOLON

                     SEMICOLON shift  409

State 292:
          relimp_chunk ::= relimp_path AS * NAME SEMICOLON

                          NAME shift  291

State 293:
          relimp_path ::= relimp_path PERIOD * NAME

                          NAME shift  411

State 294:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  414

State 295:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  415

State 296:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  419

State 297:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  420

State 298:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  421

State 299:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  425

State 300:
     (33) object_chunk ::= object_body RBRACKET SEMICOLON *

                     {default} reduce 33

State 301:
     (32) object_body ::= object_body method_chunk *

                     {default} reduce 32

State 302:
     (31) method_chunk ::= method_header stmt *

                     {default} reduce 31

State 303:
     (30) method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 30

State 304:
     (29) object_body ::= object_body VAR typedNameList_nonEmpty SEMICOLON *

                     {default} reduce 29

State 305:
     (28) object_body ::= OBJECT NAME LBRACKET *

                     {default} reduce 28

State 306:
     (26) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 26

State 307:
     (27) fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON *

                     {default} reduce 27

State 308:
     (25) fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 25

State 309:
     (83) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 83

State 310:
    (216) expr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 216

State 311:
     (89) fArg ::= NAME ASSIGN STRING *

                     {default} reduce 89

State 312:
     (95) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 95

State 313:
     (96) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 96

State 314:
     (84) lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 84

State 315:
     (70) typedNameList ::= typedNameList_nonEmpty *

                     {default} reduce 70

State 316:
     (68) typedNameList_nonEmpty ::= typedName COMMA typedNameList_nonEmpty *

                     {default} reduce 68

State 317:
     (85) expr ::= lambdaExprStart stmt *

                     {default} reduce 85

State 318:
    (174) if_stmt ::= if_block else_header stmt *

                     {default} reduce 174

State 319:
    (181) case_chunks ::= case_chunk *

                     {default} reduce 181

State 320:
    (185) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks default_chunk *

                     {default} reduce 185

State 321:
    (182) default_clause ::= DEFAULT COLON *

                     {default} reduce 182

State 322:
    (180) case_chunks ::= case_chunks case_chunk *

                     {default} reduce 180

State 323:
    (217) actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 217

State 324:
    (214) return_stmt ::= RETURN exprList *

                     {default} reduce 214

State 325:
    (213) break_stmt ::= BREAK *

                     {default} reduce 213

State 326:
    (212) continue_stmt ::= CONTINUE *

                     {default} reduce 212

State 327:
    (211) foreach_stmt ::= foreach_header RPAREN stmt *

                     {default} reduce 211

State 328:
    (209) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 209

State 329:
    (208) for_stmt ::= for_header RPAREN stmt *

                     {default} reduce 208

State 330:
    (207) for_header ::= for_header2 for_action_stmt *

                     {default} reduce 207

State 331:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (202) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 202

State 332:
    (201) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 201

State 333:
    (200) for_action_stmt_nonEmpty ::= funcexprStmt *

                     {default} reduce 200

State 334:
    (206) for_header2 ::= for_header1 expr SEMICOLON *

                     {default} reduce 206

State 335:
    (205) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 205

State 336:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (197) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 197

State 337:
    (196) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 196

State 338:
    (195) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 195

State 339:
    (194) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 194

State 340:
    (193) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 193

State 341:
    (192) for_opener ::= FOR LPAREN *

                     {default} reduce 192

State 342:
    (191) while_stmt ::= while_header RPAREN stmt *

                     {default} reduce 191

State 343:
    (189) while_start ::= WHILE *

                     {default} reduce 189

State 344:
    (188) switchcase_stmt ::= switchcase_block RBRACKET *

                     {default} reduce 188

State 345:
     (60) bodyStmtList ::= bodyStmt *

                     {default} reduce 60

State 346:
    (177) case_clause ::= case_start exprList_nonEmpty COLON *

                     {default} reduce 177

State 347:
    (176) case_start ::= CASE *

                     {default} reduce 176

State 348:
    (171) if_block ::= if_block elif_header RPAREN stmt *

                     {default} reduce 171

State 349:
    (169) elif_start ::= ELSE IF *

                     {default} reduce 169

State 350:
    (168) if_block ::= if_header RPAREN stmt *

                     {default} reduce 168

State 351:
    (166) if_start ::= IF *

                     {default} reduce 166

State 352:
    (165) once_stmt ::= once_block *

                     {default} reduce 165

State 353:
    (164) once_block ::= once_nocond stmt *

                     {default} reduce 164

State 354:
    (162) once_block ::= once_header RPAREN stmt *

                     {default} reduce 162

State 355:
    (160) once_start ::= ONCE *

                     {default} reduce 160

State 356:
    (148) assign_stmt ::= DEC lvalue *

                     {default} reduce 148

State 357:
    (146) assign_stmt ::= INC lvalue *

                     {default} reduce 146

State 358:
    (143) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 143

State 359:
    (149) assign_stmt ::= lvalue DEC *

                     {default} reduce 149

State 360:
    (147) assign_stmt ::= lvalue INC *

                     {default} reduce 147

State 361:
     (72) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 72

State 362:
     (71) nameList_nonEmpty ::= NAME *

                     {default} reduce 71

State 363:
    (101) expr ::= LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET *

                     {default} reduce 101

State 364:
    (215) expr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 215

State 365:
    (218) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 218

State 366:
     (91) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArg *

                     {default} reduce 91

State 367:
     (90) fArgs_nonEmpty ::= fArg *

                     {default} reduce 90

State 368:
     (87) fArg ::= STRING *

                     {default} reduce 87

State 369:
    (109) expr ::= LIST LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 109

State 370:
    (108) expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 108

State 371:
    (107) expr ::= STATTXTTBL LPAREN STRING RPAREN *

                     {default} reduce 107

State 372:
    (106) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 106

State 373:
    (105) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 105

State 374:
    (104) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 104

State 375:
    (103) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 103

State 376:
    (102) expr ::= L2V LPAREN expr RPAREN *

                     {default} reduce 102

State 377:
     (73) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 73

State 378:
     (64) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 64

State 379:
     (98) expr ::= LPAREN expr RPAREN *

                     {default} reduce 98

State 380:
     (62) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 62

State 381:
     (61) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 61

State 382:
     (59) bodyStmt ::= return_stmt SEMICOLON *

                     {default} reduce 59

State 383:
     (58) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 58

State 384:
     (57) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 57

State 385:
     (56) bodyStmt ::= switchcase_stmt *

                     {default} reduce 56

State 386:
     (55) bodyStmt ::= foreach_stmt *

                     {default} reduce 55

State 387:
     (54) bodyStmt ::= for_stmt *

                     {default} reduce 54

State 388:
     (53) bodyStmt ::= while_stmt *

                     {default} reduce 53

State 389:
     (52) bodyStmt ::= if_stmt *

                     {default} reduce 52

State 390:
     (51) bodyStmt ::= once_stmt *

                     {default} reduce 51

State 391:
     (50) bodyStmt ::= actionStmt *

                     {default} reduce 50

State 392:
     (49) bodyStmt ::= funcexprStmt SEMICOLON *

                     {default} reduce 49

State 393:
     (48) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 48

State 394:
     (47) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 47

State 395:
     (46) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 46

State 396:
     (45) bodyStmt ::= vdefAssignStatic_stmt SEMICOLON *

                     {default} reduce 45

State 397:
     (44) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 44

State 398:
     (43) bodyStmt ::= SEMICOLON *

                     {default} reduce 43

State 399:
     (42) bodyStmt ::= blockStmt *

                     {default} reduce 42

State 400:
     (39) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 39

State 401:
     (38) blockStmt ::= blockStmtSub rbracket *

                     {default} reduce 38

State 402:
     (37) rbracket ::= RBRACKET *

                     {default} reduce 37

State 403:
     (36) lbracket ::= LBRACKET *

                     {default} reduce 36

State 404:
     (35) stmt ::= bodyStmt *

                     {default} reduce 35

State 405:
     (34) stmt ::= error SEMICOLON *

                     {default} reduce 34

State 406:
     (79) expr ::= NUMBER *

                     {default} reduce 79

State 407:
     (82) expr ::= expr PERIOD NAME *

                     {default} reduce 82

State 408:
     (74) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 74

State 409:
     (18) relimp_chunk ::= relimp_path AS NAME SEMICOLON *

                     {default} reduce 18

State 410:
     (17) relimp_chunk ::= relimp_path SEMICOLON *

                     {default} reduce 17

State 411:
     (16) relimp_path ::= relimp_path PERIOD NAME *

                     {default} reduce 16

State 412:
     (15) relimp_path ::= relimp_start NAME *

                     {default} reduce 15

State 413:
     (14) relimp_start ::= relimp_start PERIOD *

                     {default} reduce 14

State 414:
     (21) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 21

State 415:
     (20) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 20

State 416:
     (19) dottedName ::= NAME *

                     {default} reduce 19

State 417:
     (13) relimp_start ::= IMPORT PERIOD *

                     {default} reduce 13

State 418:
     (12) chunk ::= blockStmt *

                     {default} reduce 12

State 419:
     (11) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 11

State 420:
     (10) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 10

State 421:
      (9) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 9

State 422:
      (8) chunk ::= object_chunk *

                     {default} reduce 8

State 423:
      (7) chunk ::= fdecl_chunk *

                     {default} reduce 7

State 424:
      (6) chunk ::= fdef_chunk *

                     {default} reduce 6

State 425:
      (5) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 5

State 426:
      (4) chunk ::= relimp_chunk *

                     {default} reduce 4

State 427:
      (3) chunks ::= chunks error *

                     {default} reduce 3

State 428:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: IFX
    2: ELSE
    3: ASSIGN
    4: QMARK
    5: COMMA
    6: LOR
    7: LAND
    8: LNOT
    9: EQ
   10: LE
   11: LT
   12: GE
   13: GT
   14: NE
   15: BITOR
   16: BITXOR
   17: BITAND
   18: LSHIFT
   19: RSHIFT
   20: PLUS
   21: MINUS
   22: DIVIDE
   23: MULTIPLY
   24: MOD
   25: UNARY
   26: BITNOT
   27: LPAREN
   28: LSQBRACKET
   29: PERIOD
   30: SEMICOLON
   31: IMPORT
   32: NAME
   33: AS
   34: COLON
   35: FUNCTION
   36: RPAREN
   37: OBJECT
   38: LBRACKET
   39: VAR
   40: RBRACKET
   41: NUMBER
   42: RSQBRACKET
   43: SUBSCRIPT
   44: KILLS
   45: MEMBER
   46: STRING
   47: FUNCCALL
   48: L2V
   49: MAPSTRING
   50: UNIT
   51: SWITCH
   52: LOCATION
   53: STATTXTTBL
   54: VARRAY
   55: LIST
   56: STATIC
   57: CONST
   58: INC
   59: DEC
   60: IADD
   61: ISUB
   62: IMUL
   63: IDIV
   64: IMOD
   65: ILSH
   66: IRSH
   67: IBND
   68: IBOR
   69: IBXR
   70: ONCE
   71: IF
   72: SWITCHCASE
   73: CASE
   74: DEFAULT
   75: WHILE
   76: FOR
   77: FOREACH
   78: CONTINUE
   79: BREAK
   80: RETURN
   81: CONDITIONNAME
   82: ACTIONNAME
   83: error:
   84: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   85: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   86: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   87: relimp_chunk: IMPORT
   88: import_chunk: IMPORT
   89: fdef_chunk: FUNCTION
   90: fdecl_chunk: FUNCTION
   91: object_chunk: OBJECT
   92: vdef_stmt: VAR
   93: vdefAssign_global_stmt: VAR
   94: cdef_global_stmt: CONST
   95: blockStmt: LBRACKET
   96: relimp_start: IMPORT
   97: relimp_path: IMPORT
   98: dottedName: NAME
   99: fdef_rettypes: <lambda> COLON
  100: exprList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  101: fdef_header: FUNCTION
  102: typedNameList: <lambda> NAME
  103: stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  104: object_body: OBJECT
  105: typedNameList_nonEmpty: NAME
  106: method_header: FUNCTION
  107: method_chunk: FUNCTION
  108: bodyStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  109: lbracket: LBRACKET
  110: rbracket: RBRACKET
  111: blockStmtSub: LBRACKET
  112: bodyStmtList: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  113: vdefAssignStatic_stmt: STATIC
  114: vdefAssign_stmt: VAR
  115: cdef_stmt: CONST
  116: assign_stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  117: funcexprStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  118: actionStmt: ACTIONNAME
  119: once_stmt: ONCE
  120: if_stmt: IF
  121: while_stmt: WHILE
  122: for_stmt: FOR
  123: foreach_stmt: FOREACH
  124: switchcase_stmt: SWITCHCASE
  125: continue_stmt: CONTINUE
  126: break_stmt: BREAK
  127: return_stmt: RETURN
  128: numList_nonEmpty: NUMBER
  129: typedName: NAME
  130: expr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  131: nameList_nonEmpty: NAME
  132: funcexpr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  133: exprList: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  134: lambdaExprStart: FUNCTION
  135: fArg: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  136: fArgs_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  137: fArgs: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  138: commaSkippable: <lambda> COMMA
  139: lvalue: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  140: lvalueList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  141: once_start: ONCE
  142: once_header: ONCE
  143: once_block: ONCE
  144: once_nocond: ONCE
  145: if_start: IF
  146: if_header: IF
  147: if_block: IF
  148: elif_start: ELSE
  149: elif_header: ELSE
  150: else_header: ELSE
  151: switchcase_header: SWITCHCASE
  152: case_start: CASE
  153: case_clause: CASE
  154: case_chunk: CASE
  155: case_chunks: CASE
  156: default_clause: DEFAULT
  157: default_chunk: DEFAULT
  158: switchcase_block: SWITCHCASE
  159: while_start: WHILE
  160: while_header: WHILE
  161: for_opener: FOR
  162: for_init_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  163: for_init_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  164: for_action_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  165: for_action_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  166: for_header1: FOR
  167: for_header2: FOR
  168: for_header: FOR
  169: foreach_opener: FOREACH
  170: foreach_header: FOREACH
