State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk
          chunks ::= * chunks error

                       program accept
                        chunks shift  17
                     {default} reduce 1

State 1:
          method_chunk ::= method_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  289
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 2:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  293
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  304
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          foreach_stmt ::= foreach_header RPAREN * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  313
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          for_stmt ::= for_header RPAREN * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  315
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          while_stmt ::= while_header RPAREN * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  328
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_block ::= if_block elif_header RPAREN * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  334
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= if_header RPAREN * stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  336
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 9:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          once_stmt ::= once_start * stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  338
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 10:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          blockStmtSub ::= * lbracket
     (33) blockStmtSub ::= lbracket *
          blockStmtSub ::= * lbracket bodyStmtList
          blockStmtSub ::= lbracket * bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  265
                     vdef_stmt shift  264
                     blockStmt shift  382
                      bodyStmt shift  331
                      lbracket shift  10
                  blockStmtSub shift  115
                  bodyStmtList shift  16
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 33

State 11:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          expr ::= lambdaExprStart * stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  266
                     vdef_stmt shift  264
                     blockStmt shift  382
                          stmt shift  303
                      bodyStmt shift  387
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 12:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (171) default_chunk ::= default_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  363
                     vdef_stmt shift  264
                     blockStmt shift  382
                      bodyStmt shift  364
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 171

State 13:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (170) default_chunk ::= default_clause *
          default_chunk ::= default_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                     vdef_stmt shift  264
                     blockStmt shift  382
                      bodyStmt shift  331
                      lbracket shift  10
                  blockStmtSub shift  115
                  bodyStmtList shift  12
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 170

State 14:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (166) case_chunk ::= case_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  363
                     vdef_stmt shift  264
                     blockStmt shift  382
                      bodyStmt shift  364
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 166

State 15:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (165) case_chunk ::= case_clause *
          case_chunk ::= case_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                     vdef_stmt shift  264
                     blockStmt shift  382
                      bodyStmt shift  331
                      lbracket shift  10
                  blockStmtSub shift  115
                  bodyStmtList shift  14
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 165

State 16:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
     (34) blockStmtSub ::= lbracket bodyStmtList *
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  381
                          NAME shift  154
                      FUNCTION shift  268
                      LBRACKET shift  386
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  339
                            IF shift  337
                    SWITCHCASE shift  215
                         WHILE shift  329
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  312
                         BREAK shift  311
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  363
                     vdef_stmt shift  264
                     blockStmt shift  382
                      bodyStmt shift  364
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  263
               vdefAssign_stmt shift  262
                     cdef_stmt shift  261
                   assign_stmt shift  260
                  funcexprStmt shift  259
                    actionStmt shift  374
                     once_stmt shift  373
                       if_stmt shift  372
                    while_stmt shift  371
                      for_stmt shift  370
                  foreach_stmt shift  369
               switchcase_stmt shift  368
                 continue_stmt shift  258
                    break_stmt shift  257
                   return_stmt shift  256
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 34

State 17:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunks ::= chunks * error
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON
          object_body ::= * OBJECT NAME LBRACKET
          object_body ::= * object_body VAR typedNameList_nonEmpty SEMICOLON
          object_body ::= * object_body method_chunk
          object_chunk ::= * object_body RBRACKET SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  116
                      FUNCTION shift  280
                        OBJECT shift  191
                      LBRACKET shift  386
                           VAR shift  104
                         CONST shift  103
                         error shift  403
                         chunk shift  404
                  import_chunk shift  286
                    fdef_chunk shift  401
                   fdecl_chunk shift  400
                  object_chunk shift  399
                     vdef_stmt shift  285
        vdefAssign_global_stmt shift  284
              cdef_global_stmt shift  283
                     blockStmt shift  395
                   fdef_header shift  2
                   object_body shift  99
                      lbracket shift  10
                  blockStmtSub shift  115

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (185) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  268
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                     vdef_stmt shift  326
               vdefAssign_stmt shift  325
                     cdef_stmt shift  324
                   assign_stmt shift  323
                          expr shift  140
                      funcexpr shift  276
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
        for_init_stmt_nonEmpty shift  208
                 for_init_stmt shift  207
                     {default} reduce 185

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  268
                           VAR shift  110
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                     vdef_stmt shift  326
               vdefAssign_stmt shift  325
                     cdef_stmt shift  324
                   assign_stmt shift  323
                          expr shift  140
                      funcexpr shift  276
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
        for_init_stmt_nonEmpty shift  322

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (189) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                   assign_stmt shift  318
                  funcexprStmt shift  319
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
      for_action_stmt_nonEmpty shift  206
               for_action_stmt shift  316
                     {default} reduce 189

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                   assign_stmt shift  318
                  funcexprStmt shift  319
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
      for_action_stmt_nonEmpty shift  317

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                        STRING shift  352
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  276
               lambdaExprStart shift  11
                          fArg shift  351
                fArgs_nonEmpty shift  231
                         fArgs shift  199
                     {default} reduce 84

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                        STRING shift  352
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  276
               lambdaExprStart shift  11
                          fArg shift  351
                fArgs_nonEmpty shift  231
                         fArgs shift  229
                     {default} reduce 84

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                        STRING shift  352
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  276
               lambdaExprStart shift  11
                          fArg shift  351
                fArgs_nonEmpty shift  231
                         fArgs shift  228
                     {default} reduce 84

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                        STRING shift  352
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  276
               lambdaExprStart shift  11
                          fArg shift  351
                fArgs_nonEmpty shift  231
                         fArgs shift  194
                     {default} reduce 84

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                        STRING shift  352
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  276
               lambdaExprStart shift  11
                          fArg shift  351
                fArgs_nonEmpty shift  231
                         fArgs shift  193
                     {default} reduce 84

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= KILLS LPAREN * fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                        STRING shift  352
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  276
               lambdaExprStart shift  11
                          fArg shift  351
                fArgs_nonEmpty shift  231
                         fArgs shift  192
                     {default} reduce 84

State 28:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
     (70) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          return_stmt ::= RETURN * exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  201
                          expr shift  139
                      funcexpr shift  254
                      exprList shift  310
               lambdaExprStart shift  11
                     {default} reduce 70

State 29:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= case_chunks * case_chunk
          default_clause ::= * DEFAULT COLON
          default_chunk ::= * default_clause
          default_chunk ::= * default_clause bodyStmtList
          switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks * default_chunk
    (173) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks *

                          CASE shift  333
                       DEFAULT shift  197
                    case_start shift  34
                   case_clause shift  15
                    case_chunk shift  308
                default_clause shift  13
                 default_chunk shift  306
                     {default} reduce 173

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArg
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                        STRING shift  352
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  276
               lambdaExprStart shift  11
                          fArg shift  350

State 31:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  183
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  184
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  203
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          case_clause ::= case_start * exprList_nonEmpty COLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  175
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= DEC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  140
                      funcexpr shift  276
               lambdaExprStart shift  11
                        lvalue shift  340

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= INC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  140
                      funcexpr shift  276
               lambdaExprStart shift  11
                        lvalue shift  341

State 37:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  221
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  140
                      funcexpr shift  276
               lambdaExprStart shift  11
                        lvalue shift  342

State 39:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  222
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 40:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  223
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 41:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  225
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 42:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= LIST LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  111
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 43:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= VARRAY LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  112
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 44:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  113
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 45:
          fdef_rettypes ::= COLON * exprList_nonEmpty
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  277
                          expr shift  139
                      funcexpr shift  254
               lambdaExprStart shift  11

State 46:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= * case_chunks case_chunk
          case_chunks ::= * case_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks

                          CASE shift  333
                    case_start shift  34
                   case_clause shift  15
                    case_chunk shift  305
                   case_chunks shift  29

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          for_header2 ::= for_header1 * expr SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  118
                      funcexpr shift  276
               lambdaExprStart shift  11

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          while_header ::= while_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  124
                      funcexpr shift  276
               lambdaExprStart shift  11

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          switchcase_header ::= SWITCHCASE LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  125
                      funcexpr shift  276
               lambdaExprStart shift  11

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          elif_header ::= elif_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  126
                      funcexpr shift  276
               lambdaExprStart shift  11

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          if_header ::= if_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  127
                      funcexpr shift  276
               lambdaExprStart shift  11

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBXR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  128
                      funcexpr shift  276
               lambdaExprStart shift  11

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBOR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  129
                      funcexpr shift  276
               lambdaExprStart shift  11

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBND * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  130
                      funcexpr shift  276
               lambdaExprStart shift  11

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IRSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  131
                      funcexpr shift  276
               lambdaExprStart shift  11

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ILSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  132
                      funcexpr shift  276
               lambdaExprStart shift  11

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMOD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  133
                      funcexpr shift  276
               lambdaExprStart shift  11

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IDIV * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  134
                      funcexpr shift  276
               lambdaExprStart shift  11

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMUL * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  135
                      funcexpr shift  276
               lambdaExprStart shift  11

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ISUB * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  136
                      funcexpr shift  276
               lambdaExprStart shift  11

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IADD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  137
                      funcexpr shift  276
               lambdaExprStart shift  11

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ASSIGN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  138
                      funcexpr shift  276
               lambdaExprStart shift  11

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= LNOT * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  146
                      funcexpr shift  276
               lambdaExprStart shift  11

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  166
                      funcexpr shift  276
               lambdaExprStart shift  11

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  167
                      funcexpr shift  276
               lambdaExprStart shift  11

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  168
                      funcexpr shift  276
               lambdaExprStart shift  11

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= L2V LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  119
                      funcexpr shift  276
               lambdaExprStart shift  11

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
     (91) commaSkippable ::= COMMA *
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  144
                      funcexpr shift  276
               lambdaExprStart shift  11
                     {default} reduce 91

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  120
                      funcexpr shift  276
               lambdaExprStart shift  11

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  121
                      funcexpr shift  276
               lambdaExprStart shift  11

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= expr LOR * expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  145
                      funcexpr shift  276
               lambdaExprStart shift  11

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= expr LAND * expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  147
                      funcexpr shift  276
               lambdaExprStart shift  11

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= expr GT * expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  148
                      funcexpr shift  276
               lambdaExprStart shift  11

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= expr LT * expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  149
                      funcexpr shift  276
               lambdaExprStart shift  11

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= expr GE * expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  150
                      funcexpr shift  276
               lambdaExprStart shift  11

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= expr LE * expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  151
                      funcexpr shift  276
               lambdaExprStart shift  11

State 77:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= expr NE * expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  152
                      funcexpr shift  276
               lambdaExprStart shift  11

State 78:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= expr EQ * expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  153
                      funcexpr shift  276
               lambdaExprStart shift  11

State 79:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  159
                      funcexpr shift  276
               lambdaExprStart shift  11

State 80:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  158
                      funcexpr shift  276
               lambdaExprStart shift  11

State 81:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  160
                      funcexpr shift  276
               lambdaExprStart shift  11

State 82:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  161
                      funcexpr shift  276
               lambdaExprStart shift  11

State 83:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  162
                      funcexpr shift  276
               lambdaExprStart shift  11

State 84:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  169
                      funcexpr shift  276
               lambdaExprStart shift  11

State 85:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  170
                      funcexpr shift  276
               lambdaExprStart shift  11

State 86:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  171
                      funcexpr shift  276
               lambdaExprStart shift  11

State 87:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  163
                      funcexpr shift  276
               lambdaExprStart shift  11

State 88:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  164
                      funcexpr shift  276
               lambdaExprStart shift  11

State 89:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK expr COLON * expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  141
                      funcexpr shift  276
               lambdaExprStart shift  11

State 90:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK * expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  122
                      funcexpr shift  276
               lambdaExprStart shift  11

State 91:
          typedName ::= NAME COLON * expr
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  142
                      funcexpr shift  276
               lambdaExprStart shift  11

State 92:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  123
                      funcexpr shift  276
               lambdaExprStart shift  11

State 93:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  117
                      funcexpr shift  276
               lambdaExprStart shift  11

State 94:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  269
                      FUNCTION shift  268
                        NUMBER shift  389
                         KILLS shift  270
                           L2V shift  249
                     MAPSTRING shift  248
                          UNIT shift  245
                        SWITCH shift  242
                      LOCATION shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  144
                      funcexpr shift  276
               lambdaExprStart shift  11

State 95:
          method_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (62) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  267
                 typedNameList shift  186
        typedNameList_nonEmpty shift  301
                     typedName shift  196
                     {default} reduce 62

State 96:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN expr
          if_block ::= if_block * elif_header RPAREN stmt
          else_header ::= * ELSE
    (160) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  218
                    elif_start shift  217
                   elif_header shift  216
                   else_header shift  3
                     {default} reduce 160

State 97:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (62) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN * typedNameList RPAREN fdef_rettypes

                          NAME shift  267
                 typedNameList shift  195
        typedNameList_nonEmpty shift  301
                     typedName shift  196
                     {default} reduce 62

State 98:
          fdef_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN * typedNameList RPAREN SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (62) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  267
                 typedNameList shift  278
        typedNameList_nonEmpty shift  301
                     typedName shift  196
                     {default} reduce 62

State 99:
          object_body ::= object_body * VAR typedNameList_nonEmpty SEMICOLON
          method_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          method_chunk ::= * method_header stmt
          object_body ::= object_body * method_chunk
          object_chunk ::= object_body * RBRACKET SEMICOLON

                      FUNCTION shift  188
                           VAR shift  100
                      RBRACKET shift  185
                 method_header shift  1
                  method_chunk shift  288

State 100:
          object_body ::= object_body VAR * typedNameList_nonEmpty SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty

                          NAME shift  267
        typedNameList_nonEmpty shift  189
                     typedName shift  196

State 101:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
          typedNameList_nonEmpty ::= typedName COMMA * typedNameList_nonEmpty

                          NAME shift  267
        typedNameList_nonEmpty shift  302
                     typedName shift  196

State 102:
     (16) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN * SEMICOLON

                     SEMICOLON shift  294
                         COLON shift  45
                 fdef_rettypes shift  295
                     {default} reduce 16

State 103:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  346
             nameList_nonEmpty shift  172

State 104:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  346
             nameList_nonEmpty shift  173

State 105:
     (16) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  45
                 fdef_rettypes shift  290
                     {default} reduce 16

State 106:
     (16) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  45
                 fdef_rettypes shift  300
                     {default} reduce 16

State 107:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty

                          NAME shift  346
             nameList_nonEmpty shift  174

State 108:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  346
             nameList_nonEmpty shift  177

State 109:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  346
             nameList_nonEmpty shift  178

State 110:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  346
             nameList_nonEmpty shift  179

State 111:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (92) commaSkippable ::= *
          expr ::= LIST LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  68
                commaSkippable shift  233
                     {default} reduce 92

State 112:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (92) commaSkippable ::= *
          expr ::= VARRAY LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  68
                commaSkippable shift  235
                     {default} reduce 92

State 113:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (92) commaSkippable ::= *
          expr ::= LSQBRACKET exprList_nonEmpty * commaSkippable RSQBRACKET

                         COMMA shift  68
                commaSkippable shift  227
                     {default} reduce 92

State 114:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  252
              numList_nonEmpty shift  180

State 115:
          rbracket ::= * RBRACKET
          blockStmt ::= blockStmtSub * rbracket

                      RBRACKET shift  385
                      rbracket shift  384

State 116:
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                          NAME shift  394
                    dottedName shift  182

State 117:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                    RSQBRACKET shift  296

State 118:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          for_header2 ::= for_header1 expr * SEMICOLON

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     SEMICOLON shift  320

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= L2V LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                        RPAREN shift  359

State 120:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                        RPAREN shift  362

State 121:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                    RSQBRACKET shift  155

State 122:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr QMARK expr * COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                         COLON shift  89

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (81) fArg ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 81

State 124:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (176) while_header ::= while_start LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 176

State 125:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (162) switchcase_header ::= SWITCHCASE LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 162

State 126:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (157) elif_header ::= elif_start LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 157

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (154) if_header ::= if_start LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 154

State 128:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (150) assign_stmt ::= lvalue IBXR expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 150

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (149) assign_stmt ::= lvalue IBOR expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 149

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (148) assign_stmt ::= lvalue IBND expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 148

State 131:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (147) assign_stmt ::= lvalue IRSH expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 147

State 132:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (146) assign_stmt ::= lvalue ILSH expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 146

State 133:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (145) assign_stmt ::= lvalue IMOD expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 145

State 134:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (144) assign_stmt ::= lvalue IDIV expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 144

State 135:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (143) assign_stmt ::= lvalue IMUL expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 143

State 136:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (142) assign_stmt ::= lvalue ISUB expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 142

State 137:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (141) assign_stmt ::= lvalue IADD expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 141

State 138:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (135) assign_stmt ::= lvalue ASSIGN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 135

State 139:
     (68) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 68

State 140:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  70
                        PERIOD shift  255

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
    (101) expr ::= expr QMARK expr COLON expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 101

State 142:
     (59) typedName ::= NAME COLON expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 59

State 143:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (79) fArg ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 79

State 144:
     (69) exprList_nonEmpty ::= exprList_nonEmpty COMMA expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 69

State 145:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (122) expr ::= expr LOR expr *

                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 122

State 146:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (123) expr ::= LNOT expr *

                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 123

State 147:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
    (121) expr ::= expr LAND expr *
          expr ::= expr * LOR expr

                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 121

State 148:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
    (120) expr ::= expr GT expr *
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 120

State 149:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
    (119) expr ::= expr LT expr *
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 119

State 150:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
    (118) expr ::= expr GE expr *
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 118

State 151:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
    (117) expr ::= expr LE expr *
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 117

State 152:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
    (116) expr ::= expr NE expr *
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 116

State 153:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
    (115) expr ::= expr EQ expr *
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 115

State 154:
     (74) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (130) lvalue ::= NAME *

                        ASSIGN reduce 130
                         COMMA reduce 130
                        LPAREN shift  26
                     SEMICOLON reduce 130
                        RPAREN reduce 130
                           INC reduce 130
                           DEC reduce 130
                          IADD reduce 130
                          ISUB reduce 130
                          IMUL reduce 130
                          IDIV reduce 130
                          IMOD reduce 130
                          ILSH reduce 130
                          IRSH reduce 130
                          IBND reduce 130
                          IBOR reduce 130
                          IBXR reduce 130
                     {default} reduce 74

State 155:
     (76) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (131) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 131
                         COMMA reduce 131
                     SEMICOLON reduce 131
                        RPAREN reduce 131
                           INC reduce 131
                           DEC reduce 131
                          IADD reduce 131
                          ISUB reduce 131
                          IMUL reduce 131
                          IDIV reduce 131
                          IMOD reduce 131
                          ILSH reduce 131
                          IRSH reduce 131
                          IBND reduce 131
                          IBOR reduce 131
                          IBXR reduce 131
                     {default} reduce 76

State 156:
     (75) expr ::= expr PERIOD NAME *
    (132) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 132
                         COMMA reduce 132
                     SEMICOLON reduce 132
                        RPAREN reduce 132
                           INC reduce 132
                           DEC reduce 132
                          IADD reduce 132
                          ISUB reduce 132
                          IMUL reduce 132
                          IDIV reduce 132
                          IMOD reduce 132
                          ILSH reduce 132
                          IRSH reduce 132
                          IBND reduce 132
                          IBOR reduce 132
                          IBXR reduce 132
                     {default} reduce 75

State 157:
    (133) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * INC
          assign_stmt ::= lvalue * DEC
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  62
                           INC shift  344
                           DEC shift  343
                          IADD shift  61
                          ISUB shift  60
                          IMUL shift  59
                          IDIV shift  58
                          IMOD shift  57
                          ILSH shift  56
                          IRSH shift  55
                          IBND shift  54
                          IBOR shift  53
                          IBXR shift  52
                     {default} reduce 133

State 158:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
    (110) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 110

State 159:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (111) expr ::= expr BITXOR expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 111

State 160:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
    (109) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 109

State 161:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
    (108) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 108

State 162:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
    (107) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 107

State 163:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
    (103) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 103

State 164:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
    (102) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 102

State 165:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (86) funcexprStmt ::= funcexpr *
     (89) expr ::= funcexpr *

                         COMMA reduce 86
                    LSQBRACKET shift  275
                     SEMICOLON reduce 86
                        RPAREN reduce 86
                     {default} reduce 89

State 166:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (114) expr ::= BITNOT expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 114

State 167:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (113) expr ::= MINUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 113

State 168:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (112) expr ::= PLUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 112

State 169:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
    (106) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 106

State 170:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
    (105) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 105

State 171:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
    (104) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  271
                     {default} reduce 104

State 172:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  31
                         COMMA shift  226

State 173:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (124) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  226
                     {default} reduce 124

State 174:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty

                         COMMA shift  226
                         COLON shift  33

State 175:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          case_clause ::= case_start exprList_nonEmpty * COLON

                         COMMA shift  94
                         COLON shift  332

State 176:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  37
                         COMMA shift  38

State 177:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  39
                         COMMA shift  226

State 178:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  40
                         COMMA shift  226

State 179:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (124) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  41
                         COMMA shift  226
                     {default} reduce 124

State 180:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  251
                    RSQBRACKET shift  250

State 181:
     (74) expr ::= NAME *
          fArg ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  92
                        LPAREN shift  26
                     {default} reduce 74

State 182:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (15) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  282
                            AS shift  281
                     {default} reduce 15

State 183:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (129) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 129

State 184:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (127) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 127

State 185:
          object_chunk ::= object_body RBRACKET * SEMICOLON

                     SEMICOLON shift  287

State 186:
          method_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  105

State 187:
          method_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  95

State 188:
          method_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes

                          NAME shift  187

State 189:
          object_body ::= object_body VAR typedNameList_nonEmpty * SEMICOLON

                     SEMICOLON shift  291

State 190:
          object_body ::= OBJECT NAME * LBRACKET

                      LBRACKET shift  292

State 191:
          object_body ::= OBJECT * NAME LBRACKET

                          NAME shift  190

State 192:
          expr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  297

State 193:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  298

State 194:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  299

State 195:
          lambdaExprStart ::= FUNCTION LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  106

State 196:
     (60) typedNameList_nonEmpty ::= typedName *
          typedNameList_nonEmpty ::= typedName * COMMA typedNameList_nonEmpty

                         COMMA shift  101
                     {default} reduce 60

State 197:
          default_clause ::= DEFAULT * COLON

                         COLON shift  307

State 198:
          actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON
    (204) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     SEMICOLON shift  309
                     {default} reduce 204

State 199:
          actionStmt ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  198

State 200:
          actionStmt ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  22

State 201:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
     (71) exprList ::= exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 71

State 202:
          foreach_stmt ::= foreach_header * RPAREN stmt

                        RPAREN shift  4

State 203:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (196) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 196

State 204:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  314

State 205:
          for_stmt ::= for_header * RPAREN stmt

                        RPAREN shift  5

State 206:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (190) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  21
                     {default} reduce 190

State 207:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  321

State 208:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (184) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  19
                     {default} reduce 184

State 209:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  327

State 210:
          while_stmt ::= while_header * RPAREN stmt

                        RPAREN shift  6

State 211:
          while_header ::= while_start * LPAREN expr

                        LPAREN shift  48

State 212:
          switchcase_stmt ::= switchcase_block * RBRACKET

                      RBRACKET shift  330

State 213:
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks

                      LBRACKET shift  46

State 214:
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks

                        RPAREN shift  213

State 215:
          switchcase_header ::= SWITCHCASE * LPAREN expr

                        LPAREN shift  49

State 216:
          if_block ::= if_block elif_header * RPAREN stmt

                        RPAREN shift  7

State 217:
          elif_header ::= elif_start * LPAREN expr

                        LPAREN shift  50

State 218:
          elif_start ::= ELSE * IF
    (159) else_header ::= ELSE *

                            IF shift  335
                     {default} reduce 159

State 219:
          if_block ::= if_header * RPAREN stmt

                        RPAREN shift  8

State 220:
          if_header ::= if_start * LPAREN expr

                        LPAREN shift  51

State 221:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (136) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 136

State 222:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (128) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 128

State 223:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (126) vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 126

State 224:
          vdefAssignStatic_stmt ::= STATIC * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty

                           VAR shift  109

State 225:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (125) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 125

State 226:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  345

State 227:
          expr ::= LSQBRACKET exprList_nonEmpty commaSkippable * RSQBRACKET

                    RSQBRACKET shift  347

State 228:
          expr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  348

State 229:
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  349

State 230:
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  23

State 231:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArg
     (85) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  30
                     {default} reduce 85

State 232:
          expr ::= CONDITIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  24

State 233:
          expr ::= LIST LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  353

State 234:
          expr ::= LIST * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  42

State 235:
          expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  354

State 236:
          expr ::= VARRAY * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  43

State 237:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  355

State 238:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  237

State 239:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  238

State 240:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  356

State 241:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  240

State 242:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  241

State 243:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  357

State 244:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  243

State 245:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  244

State 246:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  358

State 247:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  246

State 248:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  247

State 249:
          expr ::= L2V * LPAREN expr RPAREN

                        LPAREN shift  67

State 250:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  360

State 251:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  361

State 252:
     (56) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  272
                     {default} reduce 56

State 253:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  114

State 254:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (89) expr ::= funcexpr *

                    LSQBRACKET shift  253
                     {default} reduce 89

State 255:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  156

State 256:
          bodyStmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  365

State 257:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  366

State 258:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  367

State 259:
          bodyStmt ::= funcexprStmt * SEMICOLON

                     SEMICOLON shift  375

State 260:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  376

State 261:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  377

State 262:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  378

State 263:
          bodyStmt ::= vdefAssignStatic_stmt * SEMICOLON

                     SEMICOLON shift  379

State 264:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  380

State 265:
          blockStmt ::= lbracket error * RBRACKET

                      RBRACKET shift  383

State 266:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  388

State 267:
     (58) typedName ::= NAME *
          typedName ::= NAME * COLON expr

                         COLON shift  91
                     {default} reduce 58

State 268:
          lambdaExprStart ::= FUNCTION * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  97

State 269:
     (74) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  26
                     {default} reduce 74

State 270:
     (73) expr ::= KILLS *
          expr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  27
                     {default} reduce 73

State 271:
          expr ::= expr PERIOD * NAME

                          NAME shift  390

State 272:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  391

State 273:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  272

State 274:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  273

State 275:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  274

State 276:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (89) expr ::= funcexpr *

                    LSQBRACKET shift  275
                     {default} reduce 89

State 277:
     (17) fdef_rettypes ::= COLON exprList_nonEmpty *
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr

                         COMMA shift  94
                     {default} reduce 17

State 278:
          fdef_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList * RPAREN SEMICOLON

                        RPAREN shift  102

State 279:
          fdef_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME * LPAREN typedNameList RPAREN SEMICOLON

                        LPAREN shift  98

State 280:
          fdef_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION * NAME LPAREN typedNameList RPAREN SEMICOLON

                          NAME shift  279

State 281:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  392

State 282:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  393

State 283:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  396

State 284:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  397

State 285:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  398

State 286:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  402

State 287:
     (26) object_chunk ::= object_body RBRACKET SEMICOLON *

                     {default} reduce 26

State 288:
     (25) object_body ::= object_body method_chunk *

                     {default} reduce 25

State 289:
     (24) method_chunk ::= method_header stmt *

                     {default} reduce 24

State 290:
     (23) method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 23

State 291:
     (22) object_body ::= object_body VAR typedNameList_nonEmpty SEMICOLON *

                     {default} reduce 22

State 292:
     (21) object_body ::= OBJECT NAME LBRACKET *

                     {default} reduce 21

State 293:
     (19) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 19

State 294:
     (20) fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON *

                     {default} reduce 20

State 295:
     (18) fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 18

State 296:
     (76) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 76

State 297:
    (202) expr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 202

State 298:
     (87) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 87

State 299:
     (88) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 88

State 300:
     (77) lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 77

State 301:
     (63) typedNameList ::= typedNameList_nonEmpty *

                     {default} reduce 63

State 302:
     (61) typedNameList_nonEmpty ::= typedName COMMA typedNameList_nonEmpty *

                     {default} reduce 61

State 303:
     (78) expr ::= lambdaExprStart stmt *

                     {default} reduce 78

State 304:
    (161) if_stmt ::= if_block else_header stmt *

                     {default} reduce 161

State 305:
    (168) case_chunks ::= case_chunk *

                     {default} reduce 168

State 306:
    (172) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks default_chunk *

                     {default} reduce 172

State 307:
    (169) default_clause ::= DEFAULT COLON *

                     {default} reduce 169

State 308:
    (167) case_chunks ::= case_chunks case_chunk *

                     {default} reduce 167

State 309:
    (203) actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 203

State 310:
    (200) return_stmt ::= RETURN exprList *

                     {default} reduce 200

State 311:
    (199) break_stmt ::= BREAK *

                     {default} reduce 199

State 312:
    (198) continue_stmt ::= CONTINUE *

                     {default} reduce 198

State 313:
    (197) foreach_stmt ::= foreach_header RPAREN stmt *

                     {default} reduce 197

State 314:
    (195) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 195

State 315:
    (194) for_stmt ::= for_header RPAREN stmt *

                     {default} reduce 194

State 316:
    (193) for_header ::= for_header2 for_action_stmt *

                     {default} reduce 193

State 317:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (188) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 188

State 318:
    (187) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 187

State 319:
    (186) for_action_stmt_nonEmpty ::= funcexprStmt *

                     {default} reduce 186

State 320:
    (192) for_header2 ::= for_header1 expr SEMICOLON *

                     {default} reduce 192

State 321:
    (191) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 191

State 322:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (183) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 183

State 323:
    (182) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 182

State 324:
    (181) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 181

State 325:
    (180) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 180

State 326:
    (179) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 179

State 327:
    (178) for_opener ::= FOR LPAREN *

                     {default} reduce 178

State 328:
    (177) while_stmt ::= while_header RPAREN stmt *

                     {default} reduce 177

State 329:
    (175) while_start ::= WHILE *

                     {default} reduce 175

State 330:
    (174) switchcase_stmt ::= switchcase_block RBRACKET *

                     {default} reduce 174

State 331:
     (53) bodyStmtList ::= bodyStmt *

                     {default} reduce 53

State 332:
    (164) case_clause ::= case_start exprList_nonEmpty COLON *

                     {default} reduce 164

State 333:
    (163) case_start ::= CASE *

                     {default} reduce 163

State 334:
    (158) if_block ::= if_block elif_header RPAREN stmt *

                     {default} reduce 158

State 335:
    (156) elif_start ::= ELSE IF *

                     {default} reduce 156

State 336:
    (155) if_block ::= if_header RPAREN stmt *

                     {default} reduce 155

State 337:
    (153) if_start ::= IF *

                     {default} reduce 153

State 338:
    (152) once_stmt ::= once_start stmt *

                     {default} reduce 152

State 339:
    (151) once_start ::= ONCE *

                     {default} reduce 151

State 340:
    (139) assign_stmt ::= DEC lvalue *

                     {default} reduce 139

State 341:
    (137) assign_stmt ::= INC lvalue *

                     {default} reduce 137

State 342:
    (134) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 134

State 343:
    (140) assign_stmt ::= lvalue DEC *

                     {default} reduce 140

State 344:
    (138) assign_stmt ::= lvalue INC *

                     {default} reduce 138

State 345:
     (65) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 65

State 346:
     (64) nameList_nonEmpty ::= NAME *

                     {default} reduce 64

State 347:
     (93) expr ::= LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET *

                     {default} reduce 93

State 348:
    (201) expr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 201

State 349:
    (204) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 204

State 350:
     (83) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArg *

                     {default} reduce 83

State 351:
     (82) fArgs_nonEmpty ::= fArg *

                     {default} reduce 82

State 352:
     (80) fArg ::= STRING *

                     {default} reduce 80

State 353:
    (100) expr ::= LIST LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 100

State 354:
     (99) expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 99

State 355:
     (98) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 98

State 356:
     (97) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 97

State 357:
     (96) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 96

State 358:
     (95) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 95

State 359:
     (94) expr ::= L2V LPAREN expr RPAREN *

                     {default} reduce 94

State 360:
     (66) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 66

State 361:
     (57) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 57

State 362:
     (90) expr ::= LPAREN expr RPAREN *

                     {default} reduce 90

State 363:
     (55) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 55

State 364:
     (54) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 54

State 365:
     (52) bodyStmt ::= return_stmt SEMICOLON *

                     {default} reduce 52

State 366:
     (51) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 51

State 367:
     (50) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 50

State 368:
     (49) bodyStmt ::= switchcase_stmt *

                     {default} reduce 49

State 369:
     (48) bodyStmt ::= foreach_stmt *

                     {default} reduce 48

State 370:
     (47) bodyStmt ::= for_stmt *

                     {default} reduce 47

State 371:
     (46) bodyStmt ::= while_stmt *

                     {default} reduce 46

State 372:
     (45) bodyStmt ::= if_stmt *

                     {default} reduce 45

State 373:
     (44) bodyStmt ::= once_stmt *

                     {default} reduce 44

State 374:
     (43) bodyStmt ::= actionStmt *

                     {default} reduce 43

State 375:
     (42) bodyStmt ::= funcexprStmt SEMICOLON *

                     {default} reduce 42

State 376:
     (41) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 41

State 377:
     (40) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 40

State 378:
     (39) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 39

State 379:
     (38) bodyStmt ::= vdefAssignStatic_stmt SEMICOLON *

                     {default} reduce 38

State 380:
     (37) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 37

State 381:
     (36) bodyStmt ::= SEMICOLON *

                     {default} reduce 36

State 382:
     (35) bodyStmt ::= blockStmt *

                     {default} reduce 35

State 383:
     (32) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 32

State 384:
     (31) blockStmt ::= blockStmtSub rbracket *

                     {default} reduce 31

State 385:
     (30) rbracket ::= RBRACKET *

                     {default} reduce 30

State 386:
     (29) lbracket ::= LBRACKET *

                     {default} reduce 29

State 387:
     (28) stmt ::= bodyStmt *

                     {default} reduce 28

State 388:
     (27) stmt ::= error SEMICOLON *

                     {default} reduce 27

State 389:
     (72) expr ::= NUMBER *

                     {default} reduce 72

State 390:
     (75) expr ::= expr PERIOD NAME *

                     {default} reduce 75

State 391:
     (67) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 67

State 392:
     (14) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 14

State 393:
     (13) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 13

State 394:
     (12) dottedName ::= NAME *

                     {default} reduce 12

State 395:
     (11) chunk ::= blockStmt *

                     {default} reduce 11

State 396:
     (10) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 10

State 397:
      (9) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 9

State 398:
      (8) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 8

State 399:
      (7) chunk ::= object_chunk *

                     {default} reduce 7

State 400:
      (6) chunk ::= fdecl_chunk *

                     {default} reduce 6

State 401:
      (5) chunk ::= fdef_chunk *

                     {default} reduce 5

State 402:
      (4) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 4

State 403:
      (3) chunks ::= chunks error *

                     {default} reduce 3

State 404:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: IFX
    2: ELSE
    3: ASSIGN
    4: QMARK
    5: COMMA
    6: LOR
    7: LAND
    8: LNOT
    9: EQ
   10: LE
   11: LT
   12: GE
   13: GT
   14: NE
   15: BITOR
   16: BITXOR
   17: BITAND
   18: LSHIFT
   19: RSHIFT
   20: PLUS
   21: MINUS
   22: DIVIDE
   23: MULTIPLY
   24: MOD
   25: UNARY
   26: BITNOT
   27: LPAREN
   28: LSQBRACKET
   29: PERIOD
   30: SEMICOLON
   31: NAME
   32: IMPORT
   33: AS
   34: COLON
   35: FUNCTION
   36: RPAREN
   37: OBJECT
   38: LBRACKET
   39: VAR
   40: RBRACKET
   41: NUMBER
   42: RSQBRACKET
   43: SUBSCRIPT
   44: KILLS
   45: MEMBER
   46: STRING
   47: FUNCCALL
   48: L2V
   49: MAPSTRING
   50: UNIT
   51: SWITCH
   52: LOCATION
   53: VARRAY
   54: LIST
   55: STATIC
   56: CONST
   57: INC
   58: DEC
   59: IADD
   60: ISUB
   61: IMUL
   62: IDIV
   63: IMOD
   64: ILSH
   65: IRSH
   66: IBND
   67: IBOR
   68: IBXR
   69: ONCE
   70: IF
   71: SWITCHCASE
   72: CASE
   73: DEFAULT
   74: WHILE
   75: FOR
   76: FOREACH
   77: CONTINUE
   78: BREAK
   79: RETURN
   80: CONDITIONNAME
   81: ACTIONNAME
   82: error:
   83: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   84: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   85: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   86: import_chunk: IMPORT
   87: fdef_chunk: FUNCTION
   88: fdecl_chunk: FUNCTION
   89: object_chunk: OBJECT
   90: vdef_stmt: VAR
   91: vdefAssign_global_stmt: VAR
   92: cdef_global_stmt: CONST
   93: blockStmt: LBRACKET
   94: dottedName: NAME
   95: fdef_rettypes: <lambda> COLON
   96: exprList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
   97: fdef_header: FUNCTION
   98: typedNameList: <lambda> NAME
   99: stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  100: object_body: OBJECT
  101: typedNameList_nonEmpty: NAME
  102: method_header: FUNCTION
  103: method_chunk: FUNCTION
  104: bodyStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  105: lbracket: LBRACKET
  106: rbracket: RBRACKET
  107: blockStmtSub: LBRACKET
  108: bodyStmtList: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  109: vdefAssignStatic_stmt: STATIC
  110: vdefAssign_stmt: VAR
  111: cdef_stmt: CONST
  112: assign_stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  113: funcexprStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  114: actionStmt: ACTIONNAME
  115: once_stmt: ONCE
  116: if_stmt: IF
  117: while_stmt: WHILE
  118: for_stmt: FOR
  119: foreach_stmt: FOREACH
  120: switchcase_stmt: SWITCHCASE
  121: continue_stmt: CONTINUE
  122: break_stmt: BREAK
  123: return_stmt: RETURN
  124: numList_nonEmpty: NUMBER
  125: typedName: NAME
  126: expr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  127: nameList_nonEmpty: NAME
  128: funcexpr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  129: exprList: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  130: lambdaExprStart: FUNCTION
  131: fArg: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  132: fArgs_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  133: fArgs: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  134: commaSkippable: <lambda> COMMA
  135: lvalue: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  136: lvalueList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONDITIONNAME ACTIONNAME
  137: once_start: ONCE
  138: if_start: IF
  139: if_header: IF
  140: if_block: IF
  141: elif_start: ELSE
  142: elif_header: ELSE
  143: else_header: ELSE
  144: switchcase_header: SWITCHCASE
  145: case_start: CASE
  146: case_clause: CASE
  147: case_chunk: CASE
  148: case_chunks: CASE
  149: default_clause: DEFAULT
  150: default_chunk: DEFAULT
  151: switchcase_block: SWITCHCASE
  152: while_start: WHILE
  153: while_header: WHILE
  154: for_opener: FOR
  155: for_init_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  156: for_init_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  157: for_action_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  158: for_action_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  159: for_header1: FOR
  160: for_header2: FOR
  161: for_header: FOR
  162: foreach_opener: FOREACH
  163: foreach_header: FOREACH
