State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk
          chunks ::= * chunks error

                       program accept
                        chunks shift  17
                     {default} reduce 1

State 1:
          method_chunk ::= method_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  292
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 2:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  296
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  307
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          foreach_stmt ::= foreach_header RPAREN * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  316
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          for_stmt ::= for_header RPAREN * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  318
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          while_stmt ::= while_header RPAREN * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  331
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_block ::= if_block elif_header RPAREN * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  337
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= if_header RPAREN * stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  339
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 9:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          once_stmt ::= once_start * stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  341
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 10:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          blockStmtSub ::= * lbracket
     (33) blockStmtSub ::= lbracket *
          blockStmtSub ::= * lbracket bodyStmtList
          blockStmtSub ::= lbracket * bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  268
                     vdef_stmt shift  267
                     blockStmt shift  386
                      bodyStmt shift  334
                      lbracket shift  10
                  blockStmtSub shift  115
                  bodyStmtList shift  16
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 33

State 11:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          expr ::= lambdaExprStart * stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  269
                     vdef_stmt shift  267
                     blockStmt shift  386
                          stmt shift  306
                      bodyStmt shift  391
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202

State 12:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (172) default_chunk ::= default_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  367
                     vdef_stmt shift  267
                     blockStmt shift  386
                      bodyStmt shift  368
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 172

State 13:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (171) default_chunk ::= default_clause *
          default_chunk ::= default_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                     vdef_stmt shift  267
                     blockStmt shift  386
                      bodyStmt shift  334
                      lbracket shift  10
                  blockStmtSub shift  115
                  bodyStmtList shift  12
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 171

State 14:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (167) case_chunk ::= case_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  367
                     vdef_stmt shift  267
                     blockStmt shift  386
                      bodyStmt shift  368
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 167

State 15:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (166) case_chunk ::= case_clause *
          case_chunk ::= case_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                     vdef_stmt shift  267
                     blockStmt shift  386
                      bodyStmt shift  334
                      lbracket shift  10
                  blockStmtSub shift  115
                  bodyStmtList shift  14
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 166

State 16:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
     (34) blockStmtSub ::= lbracket bodyStmtList *
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_stmt ::= * once_start stmt
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                     SEMICOLON shift  385
                          NAME shift  154
                      FUNCTION shift  271
                      LBRACKET shift  390
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                        STATIC shift  224
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                          ONCE shift  342
                            IF shift  340
                    SWITCHCASE shift  215
                         WHILE shift  332
                           FOR shift  209
                       FOREACH shift  204
                      CONTINUE shift  315
                         BREAK shift  314
                        RETURN shift  28
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  200
                         error shift  367
                     vdef_stmt shift  267
                     blockStmt shift  386
                      bodyStmt shift  368
                      lbracket shift  10
                  blockStmtSub shift  115
         vdefAssignStatic_stmt shift  266
               vdefAssign_stmt shift  265
                     cdef_stmt shift  264
                   assign_stmt shift  263
                  funcexprStmt shift  262
                    actionStmt shift  378
                     once_stmt shift  377
                       if_stmt shift  376
                    while_stmt shift  375
                      for_stmt shift  374
                  foreach_stmt shift  373
               switchcase_stmt shift  372
                 continue_stmt shift  261
                    break_stmt shift  260
                   return_stmt shift  259
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
                    once_start shift  9
                      if_start shift  220
                     if_header shift  219
                      if_block shift  96
             switchcase_header shift  214
              switchcase_block shift  212
                   while_start shift  211
                  while_header shift  210
                    for_opener shift  18
                   for_header1 shift  47
                   for_header2 shift  20
                    for_header shift  205
                foreach_opener shift  107
                foreach_header shift  202
                     {default} reduce 34

State 17:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunks ::= chunks * error
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON
          object_body ::= * OBJECT NAME LBRACKET
          object_body ::= * object_body VAR typedNameList_nonEmpty SEMICOLON
          object_body ::= * object_body method_chunk
          object_chunk ::= * object_body RBRACKET SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  116
                      FUNCTION shift  283
                        OBJECT shift  191
                      LBRACKET shift  390
                           VAR shift  104
                         CONST shift  103
                         error shift  407
                         chunk shift  408
                  import_chunk shift  289
                    fdef_chunk shift  405
                   fdecl_chunk shift  404
                  object_chunk shift  403
                     vdef_stmt shift  288
        vdefAssign_global_stmt shift  287
              cdef_global_stmt shift  286
                     blockStmt shift  399
                   fdef_header shift  2
                   object_body shift  99
                      lbracket shift  10
                  blockStmtSub shift  115

State 18:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (186) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  271
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                     vdef_stmt shift  329
               vdefAssign_stmt shift  328
                     cdef_stmt shift  327
                   assign_stmt shift  326
                          expr shift  140
                      funcexpr shift  279
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
        for_init_stmt_nonEmpty shift  208
                 for_init_stmt shift  207
                     {default} reduce 186

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  271
                           VAR shift  110
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                         CONST shift  108
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                     vdef_stmt shift  329
               vdefAssign_stmt shift  328
                     cdef_stmt shift  327
                   assign_stmt shift  326
                          expr shift  140
                      funcexpr shift  279
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
        for_init_stmt_nonEmpty shift  325

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (190) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                   assign_stmt shift  321
                  funcexprStmt shift  322
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
      for_action_stmt_nonEmpty shift  206
               for_action_stmt shift  319
                     {default} reduce 190

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                           INC shift  36
                           DEC shift  35
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                   assign_stmt shift  321
                  funcexprStmt shift  322
                          expr shift  140
                      funcexpr shift  165
               lambdaExprStart shift  11
                        lvalue shift  157
           lvalueList_nonEmpty shift  176
      for_action_stmt_nonEmpty shift  320

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                        STRING shift  355
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  279
               lambdaExprStart shift  11
                          fArg shift  354
                fArgs_nonEmpty shift  231
                         fArgs shift  199
                     {default} reduce 84

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                        STRING shift  355
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  279
               lambdaExprStart shift  11
                          fArg shift  354
                fArgs_nonEmpty shift  231
                         fArgs shift  229
                     {default} reduce 84

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                        STRING shift  355
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  279
               lambdaExprStart shift  11
                          fArg shift  354
                fArgs_nonEmpty shift  231
                         fArgs shift  228
                     {default} reduce 84

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                        STRING shift  355
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  279
               lambdaExprStart shift  11
                          fArg shift  354
                fArgs_nonEmpty shift  231
                         fArgs shift  194
                     {default} reduce 84

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                        STRING shift  355
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  279
               lambdaExprStart shift  11
                          fArg shift  354
                fArgs_nonEmpty shift  231
                         fArgs shift  193
                     {default} reduce 84

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (84) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= KILLS LPAREN * fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                        STRING shift  355
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  279
               lambdaExprStart shift  11
                          fArg shift  354
                fArgs_nonEmpty shift  231
                         fArgs shift  192
                     {default} reduce 84

State 28:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
     (70) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          return_stmt ::= RETURN * exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  201
                          expr shift  139
                      funcexpr shift  257
                      exprList shift  313
               lambdaExprStart shift  11
                     {default} reduce 70

State 29:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= case_chunks * case_chunk
          default_clause ::= * DEFAULT COLON
          default_chunk ::= * default_clause
          default_chunk ::= * default_clause bodyStmtList
          switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks * default_chunk
    (174) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks *

                          CASE shift  336
                       DEFAULT shift  197
                    case_start shift  34
                   case_clause shift  15
                    case_chunk shift  311
                default_clause shift  13
                 default_chunk shift  309
                     {default} reduce 174

State 30:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArg
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  181
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                        STRING shift  355
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  143
                      funcexpr shift  279
               lambdaExprStart shift  11
                          fArg shift  353

State 31:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  183
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  184
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  203
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          case_clause ::= case_start * exprList_nonEmpty COLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  175
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 35:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= DEC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  140
                      funcexpr shift  279
               lambdaExprStart shift  11
                        lvalue shift  343

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= INC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  140
                      funcexpr shift  279
               lambdaExprStart shift  11
                        lvalue shift  344

State 37:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  221
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 38:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  154
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  140
                      funcexpr shift  279
               lambdaExprStart shift  11
                        lvalue shift  345

State 39:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  222
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 40:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  223
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 41:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  225
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 42:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= LIST LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  111
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 43:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= VARRAY LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  112
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 44:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  113
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 45:
          fdef_rettypes ::= COLON * exprList_nonEmpty
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
             exprList_nonEmpty shift  280
                          expr shift  139
                      funcexpr shift  257
               lambdaExprStart shift  11

State 46:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= * case_chunks case_chunk
          case_chunks ::= * case_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks

                          CASE shift  336
                    case_start shift  34
                   case_clause shift  15
                    case_chunk shift  308
                   case_chunks shift  29

State 47:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          for_header2 ::= for_header1 * expr SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  118
                      funcexpr shift  279
               lambdaExprStart shift  11

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          while_header ::= while_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  124
                      funcexpr shift  279
               lambdaExprStart shift  11

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          switchcase_header ::= SWITCHCASE LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  125
                      funcexpr shift  279
               lambdaExprStart shift  11

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          elif_header ::= elif_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  126
                      funcexpr shift  279
               lambdaExprStart shift  11

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          if_header ::= if_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  127
                      funcexpr shift  279
               lambdaExprStart shift  11

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBXR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  128
                      funcexpr shift  279
               lambdaExprStart shift  11

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBOR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  129
                      funcexpr shift  279
               lambdaExprStart shift  11

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBND * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  130
                      funcexpr shift  279
               lambdaExprStart shift  11

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IRSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  131
                      funcexpr shift  279
               lambdaExprStart shift  11

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ILSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  132
                      funcexpr shift  279
               lambdaExprStart shift  11

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMOD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  133
                      funcexpr shift  279
               lambdaExprStart shift  11

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IDIV * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  134
                      funcexpr shift  279
               lambdaExprStart shift  11

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMUL * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  135
                      funcexpr shift  279
               lambdaExprStart shift  11

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ISUB * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  136
                      funcexpr shift  279
               lambdaExprStart shift  11

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IADD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  137
                      funcexpr shift  279
               lambdaExprStart shift  11

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ASSIGN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  138
                      funcexpr shift  279
               lambdaExprStart shift  11

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= LNOT * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  146
                      funcexpr shift  279
               lambdaExprStart shift  11

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  166
                      funcexpr shift  279
               lambdaExprStart shift  11

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  167
                      funcexpr shift  279
               lambdaExprStart shift  11

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  168
                      funcexpr shift  279
               lambdaExprStart shift  11

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= L2V LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  119
                      funcexpr shift  279
               lambdaExprStart shift  11

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
     (91) commaSkippable ::= COMMA *
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  144
                      funcexpr shift  279
               lambdaExprStart shift  11
                     {default} reduce 91

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  120
                      funcexpr shift  279
               lambdaExprStart shift  11

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  121
                      funcexpr shift  279
               lambdaExprStart shift  11

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= expr LOR * expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  145
                      funcexpr shift  279
               lambdaExprStart shift  11

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= expr LAND * expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  147
                      funcexpr shift  279
               lambdaExprStart shift  11

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= expr GT * expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  148
                      funcexpr shift  279
               lambdaExprStart shift  11

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= expr LT * expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  149
                      funcexpr shift  279
               lambdaExprStart shift  11

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= expr GE * expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  150
                      funcexpr shift  279
               lambdaExprStart shift  11

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= expr LE * expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  151
                      funcexpr shift  279
               lambdaExprStart shift  11

State 77:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= expr NE * expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  152
                      funcexpr shift  279
               lambdaExprStart shift  11

State 78:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= expr EQ * expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  153
                      funcexpr shift  279
               lambdaExprStart shift  11

State 79:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  159
                      funcexpr shift  279
               lambdaExprStart shift  11

State 80:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  158
                      funcexpr shift  279
               lambdaExprStart shift  11

State 81:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  160
                      funcexpr shift  279
               lambdaExprStart shift  11

State 82:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  161
                      funcexpr shift  279
               lambdaExprStart shift  11

State 83:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  162
                      funcexpr shift  279
               lambdaExprStart shift  11

State 84:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  169
                      funcexpr shift  279
               lambdaExprStart shift  11

State 85:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  170
                      funcexpr shift  279
               lambdaExprStart shift  11

State 86:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  171
                      funcexpr shift  279
               lambdaExprStart shift  11

State 87:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  163
                      funcexpr shift  279
               lambdaExprStart shift  11

State 88:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  164
                      funcexpr shift  279
               lambdaExprStart shift  11

State 89:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK expr COLON * expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  141
                      funcexpr shift  279
               lambdaExprStart shift  11

State 90:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK * expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  122
                      funcexpr shift  279
               lambdaExprStart shift  11

State 91:
          typedName ::= NAME COLON * expr
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  142
                      funcexpr shift  279
               lambdaExprStart shift  11

State 92:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  123
                      funcexpr shift  279
               lambdaExprStart shift  11

State 93:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  117
                      funcexpr shift  279
               lambdaExprStart shift  11

State 94:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  63
                          PLUS shift  66
                         MINUS shift  65
                        BITNOT shift  64
                        LPAREN shift  69
                    LSQBRACKET shift  44
                          NAME shift  272
                      FUNCTION shift  271
                        NUMBER shift  393
                         KILLS shift  273
                           L2V shift  252
                     MAPSTRING shift  251
                          UNIT shift  248
                        SWITCH shift  245
                      LOCATION shift  242
                    STATTXTTBL shift  239
                        VARRAY shift  236
                          LIST shift  234
                 CONDITIONNAME shift  232
                    ACTIONNAME shift  230
                          expr shift  144
                      funcexpr shift  279
               lambdaExprStart shift  11

State 95:
          method_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (62) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  270
                 typedNameList shift  186
        typedNameList_nonEmpty shift  304
                     typedName shift  196
                     {default} reduce 62

State 96:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN expr
          if_block ::= if_block * elif_header RPAREN stmt
          else_header ::= * ELSE
    (161) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  218
                    elif_start shift  217
                   elif_header shift  216
                   else_header shift  3
                     {default} reduce 161

State 97:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (62) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN * typedNameList RPAREN fdef_rettypes

                          NAME shift  270
                 typedNameList shift  195
        typedNameList_nonEmpty shift  304
                     typedName shift  196
                     {default} reduce 62

State 98:
          fdef_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN * typedNameList RPAREN SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (62) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  270
                 typedNameList shift  281
        typedNameList_nonEmpty shift  304
                     typedName shift  196
                     {default} reduce 62

State 99:
          object_body ::= object_body * VAR typedNameList_nonEmpty SEMICOLON
          method_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          method_chunk ::= * method_header stmt
          object_body ::= object_body * method_chunk
          object_chunk ::= object_body * RBRACKET SEMICOLON

                      FUNCTION shift  188
                           VAR shift  100
                      RBRACKET shift  185
                 method_header shift  1
                  method_chunk shift  291

State 100:
          object_body ::= object_body VAR * typedNameList_nonEmpty SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty

                          NAME shift  270
        typedNameList_nonEmpty shift  189
                     typedName shift  196

State 101:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
          typedNameList_nonEmpty ::= typedName COMMA * typedNameList_nonEmpty

                          NAME shift  270
        typedNameList_nonEmpty shift  305
                     typedName shift  196

State 102:
     (16) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN * SEMICOLON

                     SEMICOLON shift  297
                         COLON shift  45
                 fdef_rettypes shift  298
                     {default} reduce 16

State 103:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  349
             nameList_nonEmpty shift  172

State 104:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  349
             nameList_nonEmpty shift  173

State 105:
     (16) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  45
                 fdef_rettypes shift  293
                     {default} reduce 16

State 106:
     (16) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  45
                 fdef_rettypes shift  303
                     {default} reduce 16

State 107:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty

                          NAME shift  349
             nameList_nonEmpty shift  174

State 108:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  349
             nameList_nonEmpty shift  177

State 109:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  349
             nameList_nonEmpty shift  178

State 110:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  349
             nameList_nonEmpty shift  179

State 111:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (92) commaSkippable ::= *
          expr ::= LIST LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  68
                commaSkippable shift  233
                     {default} reduce 92

State 112:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (92) commaSkippable ::= *
          expr ::= VARRAY LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  68
                commaSkippable shift  235
                     {default} reduce 92

State 113:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (92) commaSkippable ::= *
          expr ::= LSQBRACKET exprList_nonEmpty * commaSkippable RSQBRACKET

                         COMMA shift  68
                commaSkippable shift  227
                     {default} reduce 92

State 114:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  255
              numList_nonEmpty shift  180

State 115:
          rbracket ::= * RBRACKET
          blockStmt ::= blockStmtSub * rbracket

                      RBRACKET shift  389
                      rbracket shift  388

State 116:
          dottedName ::= * NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                          NAME shift  398
                    dottedName shift  182

State 117:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                    RSQBRACKET shift  299

State 118:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          for_header2 ::= for_header1 expr * SEMICOLON

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     SEMICOLON shift  323

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= L2V LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                        RPAREN shift  363

State 120:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                        RPAREN shift  366

State 121:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                    RSQBRACKET shift  155

State 122:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr QMARK expr * COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                         COLON shift  89

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (81) fArg ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 81

State 124:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (177) while_header ::= while_start LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 177

State 125:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (163) switchcase_header ::= SWITCHCASE LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 163

State 126:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (158) elif_header ::= elif_start LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 158

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (155) if_header ::= if_start LPAREN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 155

State 128:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (151) assign_stmt ::= lvalue IBXR expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 151

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (150) assign_stmt ::= lvalue IBOR expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 150

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (149) assign_stmt ::= lvalue IBND expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 149

State 131:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (148) assign_stmt ::= lvalue IRSH expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 148

State 132:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (147) assign_stmt ::= lvalue ILSH expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 147

State 133:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (146) assign_stmt ::= lvalue IMOD expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 146

State 134:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (145) assign_stmt ::= lvalue IDIV expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 145

State 135:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (144) assign_stmt ::= lvalue IMUL expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 144

State 136:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (143) assign_stmt ::= lvalue ISUB expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 143

State 137:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (142) assign_stmt ::= lvalue IADD expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 142

State 138:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (136) assign_stmt ::= lvalue ASSIGN expr *

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 136

State 139:
     (68) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 68

State 140:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  70
                        PERIOD shift  258

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
    (102) expr ::= expr QMARK expr COLON expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 102

State 142:
     (59) typedName ::= NAME COLON expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 59

State 143:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (79) fArg ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 79

State 144:
     (69) exprList_nonEmpty ::= exprList_nonEmpty COMMA expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  90
                           LOR shift  71
                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 69

State 145:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (123) expr ::= expr LOR expr *

                          LAND shift  72
                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 123

State 146:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (124) expr ::= LNOT expr *

                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 124

State 147:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
    (122) expr ::= expr LAND expr *
          expr ::= expr * LOR expr

                            EQ shift  78
                            LE shift  76
                            LT shift  74
                            GE shift  75
                            GT shift  73
                            NE shift  77
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 122

State 148:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
    (121) expr ::= expr GT expr *
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 121

State 149:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
    (120) expr ::= expr LT expr *
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 120

State 150:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
    (119) expr ::= expr GE expr *
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 119

State 151:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
    (118) expr ::= expr LE expr *
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 118

State 152:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
    (117) expr ::= expr NE expr *
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 117

State 153:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
    (116) expr ::= expr EQ expr *
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  80
                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 116

State 154:
     (74) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (131) lvalue ::= NAME *

                        ASSIGN reduce 131
                         COMMA reduce 131
                        LPAREN shift  26
                     SEMICOLON reduce 131
                        RPAREN reduce 131
                           INC reduce 131
                           DEC reduce 131
                          IADD reduce 131
                          ISUB reduce 131
                          IMUL reduce 131
                          IDIV reduce 131
                          IMOD reduce 131
                          ILSH reduce 131
                          IRSH reduce 131
                          IBND reduce 131
                          IBOR reduce 131
                          IBXR reduce 131
                     {default} reduce 74

State 155:
     (76) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (132) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 132
                         COMMA reduce 132
                     SEMICOLON reduce 132
                        RPAREN reduce 132
                           INC reduce 132
                           DEC reduce 132
                          IADD reduce 132
                          ISUB reduce 132
                          IMUL reduce 132
                          IDIV reduce 132
                          IMOD reduce 132
                          ILSH reduce 132
                          IRSH reduce 132
                          IBND reduce 132
                          IBOR reduce 132
                          IBXR reduce 132
                     {default} reduce 76

State 156:
     (75) expr ::= expr PERIOD NAME *
    (133) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 133
                         COMMA reduce 133
                     SEMICOLON reduce 133
                        RPAREN reduce 133
                           INC reduce 133
                           DEC reduce 133
                          IADD reduce 133
                          ISUB reduce 133
                          IMUL reduce 133
                          IDIV reduce 133
                          IMOD reduce 133
                          ILSH reduce 133
                          IRSH reduce 133
                          IBND reduce 133
                          IBOR reduce 133
                          IBXR reduce 133
                     {default} reduce 75

State 157:
    (134) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * INC
          assign_stmt ::= lvalue * DEC
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  62
                           INC shift  347
                           DEC shift  346
                          IADD shift  61
                          ISUB shift  60
                          IMUL shift  59
                          IDIV shift  58
                          IMOD shift  57
                          ILSH shift  56
                          IRSH shift  55
                          IBND shift  54
                          IBOR shift  53
                          IBXR shift  52
                     {default} reduce 134

State 158:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
    (111) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITXOR shift  79
                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 111

State 159:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (112) expr ::= expr BITXOR expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITAND shift  81
                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 112

State 160:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
    (110) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LSHIFT shift  83
                        RSHIFT shift  82
                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 110

State 161:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
    (109) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 109

State 162:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
    (108) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  88
                         MINUS shift  87
                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 108

State 163:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
    (104) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 104

State 164:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
    (103) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  85
                      MULTIPLY shift  86
                           MOD shift  84
                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 103

State 165:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (86) funcexprStmt ::= funcexpr *
     (89) expr ::= funcexpr *

                         COMMA reduce 86
                    LSQBRACKET shift  278
                     SEMICOLON reduce 86
                        RPAREN reduce 86
                     {default} reduce 89

State 166:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (115) expr ::= BITNOT expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 115

State 167:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (114) expr ::= MINUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 114

State 168:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (113) expr ::= PLUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 113

State 169:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
    (107) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 107

State 170:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
    (106) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 106

State 171:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
    (105) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  25
                    LSQBRACKET shift  93
                        PERIOD shift  274
                     {default} reduce 105

State 172:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  31
                         COMMA shift  226

State 173:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (125) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  226
                     {default} reduce 125

State 174:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty

                         COMMA shift  226
                         COLON shift  33

State 175:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          case_clause ::= case_start exprList_nonEmpty * COLON

                         COMMA shift  94
                         COLON shift  335

State 176:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  37
                         COMMA shift  38

State 177:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  39
                         COMMA shift  226

State 178:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  40
                         COMMA shift  226

State 179:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (125) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  41
                         COMMA shift  226
                     {default} reduce 125

State 180:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  254
                    RSQBRACKET shift  253

State 181:
     (74) expr ::= NAME *
          fArg ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  92
                        LPAREN shift  26
                     {default} reduce 74

State 182:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (15) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  285
                            AS shift  284
                     {default} reduce 15

State 183:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (130) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 130

State 184:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (128) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 128

State 185:
          object_chunk ::= object_body RBRACKET * SEMICOLON

                     SEMICOLON shift  290

State 186:
          method_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  105

State 187:
          method_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  95

State 188:
          method_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes

                          NAME shift  187

State 189:
          object_body ::= object_body VAR typedNameList_nonEmpty * SEMICOLON

                     SEMICOLON shift  294

State 190:
          object_body ::= OBJECT NAME * LBRACKET

                      LBRACKET shift  295

State 191:
          object_body ::= OBJECT * NAME LBRACKET

                          NAME shift  190

State 192:
          expr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  300

State 193:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  301

State 194:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  302

State 195:
          lambdaExprStart ::= FUNCTION LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  106

State 196:
     (60) typedNameList_nonEmpty ::= typedName *
          typedNameList_nonEmpty ::= typedName * COMMA typedNameList_nonEmpty

                         COMMA shift  101
                     {default} reduce 60

State 197:
          default_clause ::= DEFAULT * COLON

                         COLON shift  310

State 198:
          actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON
    (205) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     SEMICOLON shift  312
                     {default} reduce 205

State 199:
          actionStmt ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  198

State 200:
          actionStmt ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  22

State 201:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
     (71) exprList ::= exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 71

State 202:
          foreach_stmt ::= foreach_header * RPAREN stmt

                        RPAREN shift  4

State 203:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (197) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 197

State 204:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  317

State 205:
          for_stmt ::= for_header * RPAREN stmt

                        RPAREN shift  5

State 206:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (191) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  21
                     {default} reduce 191

State 207:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  324

State 208:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (185) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  19
                     {default} reduce 185

State 209:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  330

State 210:
          while_stmt ::= while_header * RPAREN stmt

                        RPAREN shift  6

State 211:
          while_header ::= while_start * LPAREN expr

                        LPAREN shift  48

State 212:
          switchcase_stmt ::= switchcase_block * RBRACKET

                      RBRACKET shift  333

State 213:
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks

                      LBRACKET shift  46

State 214:
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks

                        RPAREN shift  213

State 215:
          switchcase_header ::= SWITCHCASE * LPAREN expr

                        LPAREN shift  49

State 216:
          if_block ::= if_block elif_header * RPAREN stmt

                        RPAREN shift  7

State 217:
          elif_header ::= elif_start * LPAREN expr

                        LPAREN shift  50

State 218:
          elif_start ::= ELSE * IF
    (160) else_header ::= ELSE *

                            IF shift  338
                     {default} reduce 160

State 219:
          if_block ::= if_header * RPAREN stmt

                        RPAREN shift  8

State 220:
          if_header ::= if_start * LPAREN expr

                        LPAREN shift  51

State 221:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (137) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 137

State 222:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (129) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 129

State 223:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (127) vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 127

State 224:
          vdefAssignStatic_stmt ::= STATIC * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty

                           VAR shift  109

State 225:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (126) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  94
                     {default} reduce 126

State 226:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  348

State 227:
          expr ::= LSQBRACKET exprList_nonEmpty commaSkippable * RSQBRACKET

                    RSQBRACKET shift  350

State 228:
          expr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  351

State 229:
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  352

State 230:
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  23

State 231:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArg
     (85) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  30
                     {default} reduce 85

State 232:
          expr ::= CONDITIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  24

State 233:
          expr ::= LIST LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  356

State 234:
          expr ::= LIST * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  42

State 235:
          expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  357

State 236:
          expr ::= VARRAY * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  43

State 237:
          expr ::= STATTXTTBL LPAREN STRING * RPAREN

                        RPAREN shift  358

State 238:
          expr ::= STATTXTTBL LPAREN * STRING RPAREN

                        STRING shift  237

State 239:
          expr ::= STATTXTTBL * LPAREN STRING RPAREN

                        LPAREN shift  238

State 240:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  359

State 241:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  240

State 242:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  241

State 243:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  360

State 244:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  243

State 245:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  244

State 246:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  361

State 247:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  246

State 248:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  247

State 249:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  362

State 250:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  249

State 251:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  250

State 252:
          expr ::= L2V * LPAREN expr RPAREN

                        LPAREN shift  67

State 253:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  364

State 254:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  365

State 255:
     (56) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  275
                     {default} reduce 56

State 256:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  114

State 257:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (89) expr ::= funcexpr *

                    LSQBRACKET shift  256
                     {default} reduce 89

State 258:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  156

State 259:
          bodyStmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  369

State 260:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  370

State 261:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  371

State 262:
          bodyStmt ::= funcexprStmt * SEMICOLON

                     SEMICOLON shift  379

State 263:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  380

State 264:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  381

State 265:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  382

State 266:
          bodyStmt ::= vdefAssignStatic_stmt * SEMICOLON

                     SEMICOLON shift  383

State 267:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  384

State 268:
          blockStmt ::= lbracket error * RBRACKET

                      RBRACKET shift  387

State 269:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  392

State 270:
     (58) typedName ::= NAME *
          typedName ::= NAME * COLON expr

                         COLON shift  91
                     {default} reduce 58

State 271:
          lambdaExprStart ::= FUNCTION * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  97

State 272:
     (74) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  26
                     {default} reduce 74

State 273:
     (73) expr ::= KILLS *
          expr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  27
                     {default} reduce 73

State 274:
          expr ::= expr PERIOD * NAME

                          NAME shift  394

State 275:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  395

State 276:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  275

State 277:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  276

State 278:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  277

State 279:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (89) expr ::= funcexpr *

                    LSQBRACKET shift  278
                     {default} reduce 89

State 280:
     (17) fdef_rettypes ::= COLON exprList_nonEmpty *
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr

                         COMMA shift  94
                     {default} reduce 17

State 281:
          fdef_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList * RPAREN SEMICOLON

                        RPAREN shift  102

State 282:
          fdef_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME * LPAREN typedNameList RPAREN SEMICOLON

                        LPAREN shift  98

State 283:
          fdef_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION * NAME LPAREN typedNameList RPAREN SEMICOLON

                          NAME shift  282

State 284:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  396

State 285:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  397

State 286:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  400

State 287:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  401

State 288:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  402

State 289:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  406

State 290:
     (26) object_chunk ::= object_body RBRACKET SEMICOLON *

                     {default} reduce 26

State 291:
     (25) object_body ::= object_body method_chunk *

                     {default} reduce 25

State 292:
     (24) method_chunk ::= method_header stmt *

                     {default} reduce 24

State 293:
     (23) method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 23

State 294:
     (22) object_body ::= object_body VAR typedNameList_nonEmpty SEMICOLON *

                     {default} reduce 22

State 295:
     (21) object_body ::= OBJECT NAME LBRACKET *

                     {default} reduce 21

State 296:
     (19) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 19

State 297:
     (20) fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON *

                     {default} reduce 20

State 298:
     (18) fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 18

State 299:
     (76) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 76

State 300:
    (203) expr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 203

State 301:
     (87) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 87

State 302:
     (88) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 88

State 303:
     (77) lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 77

State 304:
     (63) typedNameList ::= typedNameList_nonEmpty *

                     {default} reduce 63

State 305:
     (61) typedNameList_nonEmpty ::= typedName COMMA typedNameList_nonEmpty *

                     {default} reduce 61

State 306:
     (78) expr ::= lambdaExprStart stmt *

                     {default} reduce 78

State 307:
    (162) if_stmt ::= if_block else_header stmt *

                     {default} reduce 162

State 308:
    (169) case_chunks ::= case_chunk *

                     {default} reduce 169

State 309:
    (173) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks default_chunk *

                     {default} reduce 173

State 310:
    (170) default_clause ::= DEFAULT COLON *

                     {default} reduce 170

State 311:
    (168) case_chunks ::= case_chunks case_chunk *

                     {default} reduce 168

State 312:
    (204) actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 204

State 313:
    (201) return_stmt ::= RETURN exprList *

                     {default} reduce 201

State 314:
    (200) break_stmt ::= BREAK *

                     {default} reduce 200

State 315:
    (199) continue_stmt ::= CONTINUE *

                     {default} reduce 199

State 316:
    (198) foreach_stmt ::= foreach_header RPAREN stmt *

                     {default} reduce 198

State 317:
    (196) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 196

State 318:
    (195) for_stmt ::= for_header RPAREN stmt *

                     {default} reduce 195

State 319:
    (194) for_header ::= for_header2 for_action_stmt *

                     {default} reduce 194

State 320:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (189) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 189

State 321:
    (188) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 188

State 322:
    (187) for_action_stmt_nonEmpty ::= funcexprStmt *

                     {default} reduce 187

State 323:
    (193) for_header2 ::= for_header1 expr SEMICOLON *

                     {default} reduce 193

State 324:
    (192) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 192

State 325:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (184) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 184

State 326:
    (183) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 183

State 327:
    (182) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 182

State 328:
    (181) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 181

State 329:
    (180) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 180

State 330:
    (179) for_opener ::= FOR LPAREN *

                     {default} reduce 179

State 331:
    (178) while_stmt ::= while_header RPAREN stmt *

                     {default} reduce 178

State 332:
    (176) while_start ::= WHILE *

                     {default} reduce 176

State 333:
    (175) switchcase_stmt ::= switchcase_block RBRACKET *

                     {default} reduce 175

State 334:
     (53) bodyStmtList ::= bodyStmt *

                     {default} reduce 53

State 335:
    (165) case_clause ::= case_start exprList_nonEmpty COLON *

                     {default} reduce 165

State 336:
    (164) case_start ::= CASE *

                     {default} reduce 164

State 337:
    (159) if_block ::= if_block elif_header RPAREN stmt *

                     {default} reduce 159

State 338:
    (157) elif_start ::= ELSE IF *

                     {default} reduce 157

State 339:
    (156) if_block ::= if_header RPAREN stmt *

                     {default} reduce 156

State 340:
    (154) if_start ::= IF *

                     {default} reduce 154

State 341:
    (153) once_stmt ::= once_start stmt *

                     {default} reduce 153

State 342:
    (152) once_start ::= ONCE *

                     {default} reduce 152

State 343:
    (140) assign_stmt ::= DEC lvalue *

                     {default} reduce 140

State 344:
    (138) assign_stmt ::= INC lvalue *

                     {default} reduce 138

State 345:
    (135) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 135

State 346:
    (141) assign_stmt ::= lvalue DEC *

                     {default} reduce 141

State 347:
    (139) assign_stmt ::= lvalue INC *

                     {default} reduce 139

State 348:
     (65) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 65

State 349:
     (64) nameList_nonEmpty ::= NAME *

                     {default} reduce 64

State 350:
     (93) expr ::= LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET *

                     {default} reduce 93

State 351:
    (202) expr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 202

State 352:
    (205) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 205

State 353:
     (83) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArg *

                     {default} reduce 83

State 354:
     (82) fArgs_nonEmpty ::= fArg *

                     {default} reduce 82

State 355:
     (80) fArg ::= STRING *

                     {default} reduce 80

State 356:
    (101) expr ::= LIST LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 101

State 357:
    (100) expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 100

State 358:
     (99) expr ::= STATTXTTBL LPAREN STRING RPAREN *

                     {default} reduce 99

State 359:
     (98) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 98

State 360:
     (97) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 97

State 361:
     (96) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 96

State 362:
     (95) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 95

State 363:
     (94) expr ::= L2V LPAREN expr RPAREN *

                     {default} reduce 94

State 364:
     (66) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 66

State 365:
     (57) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 57

State 366:
     (90) expr ::= LPAREN expr RPAREN *

                     {default} reduce 90

State 367:
     (55) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 55

State 368:
     (54) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 54

State 369:
     (52) bodyStmt ::= return_stmt SEMICOLON *

                     {default} reduce 52

State 370:
     (51) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 51

State 371:
     (50) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 50

State 372:
     (49) bodyStmt ::= switchcase_stmt *

                     {default} reduce 49

State 373:
     (48) bodyStmt ::= foreach_stmt *

                     {default} reduce 48

State 374:
     (47) bodyStmt ::= for_stmt *

                     {default} reduce 47

State 375:
     (46) bodyStmt ::= while_stmt *

                     {default} reduce 46

State 376:
     (45) bodyStmt ::= if_stmt *

                     {default} reduce 45

State 377:
     (44) bodyStmt ::= once_stmt *

                     {default} reduce 44

State 378:
     (43) bodyStmt ::= actionStmt *

                     {default} reduce 43

State 379:
     (42) bodyStmt ::= funcexprStmt SEMICOLON *

                     {default} reduce 42

State 380:
     (41) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 41

State 381:
     (40) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 40

State 382:
     (39) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 39

State 383:
     (38) bodyStmt ::= vdefAssignStatic_stmt SEMICOLON *

                     {default} reduce 38

State 384:
     (37) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 37

State 385:
     (36) bodyStmt ::= SEMICOLON *

                     {default} reduce 36

State 386:
     (35) bodyStmt ::= blockStmt *

                     {default} reduce 35

State 387:
     (32) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 32

State 388:
     (31) blockStmt ::= blockStmtSub rbracket *

                     {default} reduce 31

State 389:
     (30) rbracket ::= RBRACKET *

                     {default} reduce 30

State 390:
     (29) lbracket ::= LBRACKET *

                     {default} reduce 29

State 391:
     (28) stmt ::= bodyStmt *

                     {default} reduce 28

State 392:
     (27) stmt ::= error SEMICOLON *

                     {default} reduce 27

State 393:
     (72) expr ::= NUMBER *

                     {default} reduce 72

State 394:
     (75) expr ::= expr PERIOD NAME *

                     {default} reduce 75

State 395:
     (67) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 67

State 396:
     (14) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 14

State 397:
     (13) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 13

State 398:
     (12) dottedName ::= NAME *

                     {default} reduce 12

State 399:
     (11) chunk ::= blockStmt *

                     {default} reduce 11

State 400:
     (10) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 10

State 401:
      (9) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 9

State 402:
      (8) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 8

State 403:
      (7) chunk ::= object_chunk *

                     {default} reduce 7

State 404:
      (6) chunk ::= fdecl_chunk *

                     {default} reduce 6

State 405:
      (5) chunk ::= fdef_chunk *

                     {default} reduce 5

State 406:
      (4) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 4

State 407:
      (3) chunks ::= chunks error *

                     {default} reduce 3

State 408:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: IFX
    2: ELSE
    3: ASSIGN
    4: QMARK
    5: COMMA
    6: LOR
    7: LAND
    8: LNOT
    9: EQ
   10: LE
   11: LT
   12: GE
   13: GT
   14: NE
   15: BITOR
   16: BITXOR
   17: BITAND
   18: LSHIFT
   19: RSHIFT
   20: PLUS
   21: MINUS
   22: DIVIDE
   23: MULTIPLY
   24: MOD
   25: UNARY
   26: BITNOT
   27: LPAREN
   28: LSQBRACKET
   29: PERIOD
   30: SEMICOLON
   31: NAME
   32: IMPORT
   33: AS
   34: COLON
   35: FUNCTION
   36: RPAREN
   37: OBJECT
   38: LBRACKET
   39: VAR
   40: RBRACKET
   41: NUMBER
   42: RSQBRACKET
   43: SUBSCRIPT
   44: KILLS
   45: MEMBER
   46: STRING
   47: FUNCCALL
   48: L2V
   49: MAPSTRING
   50: UNIT
   51: SWITCH
   52: LOCATION
   53: STATTXTTBL
   54: VARRAY
   55: LIST
   56: STATIC
   57: CONST
   58: INC
   59: DEC
   60: IADD
   61: ISUB
   62: IMUL
   63: IDIV
   64: IMOD
   65: ILSH
   66: IRSH
   67: IBND
   68: IBOR
   69: IBXR
   70: ONCE
   71: IF
   72: SWITCHCASE
   73: CASE
   74: DEFAULT
   75: WHILE
   76: FOR
   77: FOREACH
   78: CONTINUE
   79: BREAK
   80: RETURN
   81: CONDITIONNAME
   82: ACTIONNAME
   83: error:
   84: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   85: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   86: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   87: import_chunk: IMPORT
   88: fdef_chunk: FUNCTION
   89: fdecl_chunk: FUNCTION
   90: object_chunk: OBJECT
   91: vdef_stmt: VAR
   92: vdefAssign_global_stmt: VAR
   93: cdef_global_stmt: CONST
   94: blockStmt: LBRACKET
   95: dottedName: NAME
   96: fdef_rettypes: <lambda> COLON
   97: exprList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
   98: fdef_header: FUNCTION
   99: typedNameList: <lambda> NAME
  100: stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  101: object_body: OBJECT
  102: typedNameList_nonEmpty: NAME
  103: method_header: FUNCTION
  104: method_chunk: FUNCTION
  105: bodyStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  106: lbracket: LBRACKET
  107: rbracket: RBRACKET
  108: blockStmtSub: LBRACKET
  109: bodyStmtList: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  110: vdefAssignStatic_stmt: STATIC
  111: vdefAssign_stmt: VAR
  112: cdef_stmt: CONST
  113: assign_stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  114: funcexprStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  115: actionStmt: ACTIONNAME
  116: once_stmt: ONCE
  117: if_stmt: IF
  118: while_stmt: WHILE
  119: for_stmt: FOR
  120: foreach_stmt: FOREACH
  121: switchcase_stmt: SWITCHCASE
  122: continue_stmt: CONTINUE
  123: break_stmt: BREAK
  124: return_stmt: RETURN
  125: numList_nonEmpty: NUMBER
  126: typedName: NAME
  127: expr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  128: nameList_nonEmpty: NAME
  129: funcexpr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  130: exprList: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  131: lambdaExprStart: FUNCTION
  132: fArg: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  133: fArgs_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  134: fArgs: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  135: commaSkippable: <lambda> COMMA
  136: lvalue: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  137: lvalueList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  138: once_start: ONCE
  139: if_start: IF
  140: if_header: IF
  141: if_block: IF
  142: elif_start: ELSE
  143: elif_header: ELSE
  144: else_header: ELSE
  145: switchcase_header: SWITCHCASE
  146: case_start: CASE
  147: case_clause: CASE
  148: case_chunk: CASE
  149: case_chunks: CASE
  150: default_clause: DEFAULT
  151: default_chunk: DEFAULT
  152: switchcase_block: SWITCHCASE
  153: while_start: WHILE
  154: while_header: WHILE
  155: for_opener: FOR
  156: for_init_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  157: for_init_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  158: for_action_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  159: for_action_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  160: for_header1: FOR
  161: for_header2: FOR
  162: for_header: FOR
  163: foreach_opener: FOREACH
  164: foreach_header: FOREACH
