State 0:
          program ::= * chunks
      (1) chunks ::= *
          chunks ::= * chunks chunk
          chunks ::= * chunks error

                       program accept
                        chunks shift  18
                     {default} reduce 1

State 1:
          method_chunk ::= method_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  298
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 2:
          fdef_chunk ::= fdef_header * stmt
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  302
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 3:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          if_stmt ::= if_block else_header * stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  313
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 4:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          foreach_stmt ::= foreach_header RPAREN * stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  322
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 5:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          for_stmt ::= for_header RPAREN * stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  324
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 6:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          while_stmt ::= while_header RPAREN * stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  337
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 7:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_block ::= if_block elif_header RPAREN * stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  343
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 8:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= if_header RPAREN * stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  345
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 9:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_block ::= once_nocond * stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  348
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 10:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_block ::= once_header RPAREN * stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  349
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 11:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmt ::= lbracket * error RBRACKET
          blockStmtSub ::= * lbracket
     (36) blockStmtSub ::= lbracket *
          blockStmtSub ::= * lbracket bodyStmtList
          blockStmtSub ::= lbracket * bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  274
                     vdef_stmt shift  273
                     blockStmt shift  394
                      bodyStmt shift  340
                      lbracket shift  11
                  blockStmtSub shift  118
                  bodyStmtList shift  17
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206
                     {default} reduce 36

State 12:
          stmt ::= * error SEMICOLON
          stmt ::= * bodyStmt
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          expr ::= lambdaExprStart * stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  275
                     vdef_stmt shift  273
                     blockStmt shift  394
                          stmt shift  312
                      bodyStmt shift  399
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206

State 13:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (179) default_chunk ::= default_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  375
                     vdef_stmt shift  273
                     blockStmt shift  394
                      bodyStmt shift  376
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206
                     {default} reduce 179

State 14:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (178) default_chunk ::= default_clause *
          default_chunk ::= default_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                     vdef_stmt shift  273
                     blockStmt shift  394
                      bodyStmt shift  340
                      lbracket shift  11
                  blockStmtSub shift  118
                  bodyStmtList shift  13
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206
                     {default} reduce 178

State 15:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (174) case_chunk ::= case_clause bodyStmtList *
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  375
                     vdef_stmt shift  273
                     blockStmt shift  394
                      bodyStmt shift  376
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206
                     {default} reduce 174

State 16:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= * bodyStmt
          bodyStmtList ::= * bodyStmtList bodyStmt
          bodyStmtList ::= * bodyStmtList error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
    (173) case_chunk ::= case_clause *
          case_chunk ::= case_clause * bodyStmtList
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                     vdef_stmt shift  273
                     blockStmt shift  394
                      bodyStmt shift  340
                      lbracket shift  11
                  blockStmtSub shift  118
                  bodyStmtList shift  15
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206
                     {default} reduce 173

State 17:
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
     (37) blockStmtSub ::= lbracket bodyStmtList *
          bodyStmt ::= * blockStmt
          bodyStmt ::= * SEMICOLON
          bodyStmt ::= * vdef_stmt SEMICOLON
          bodyStmt ::= * vdefAssignStatic_stmt SEMICOLON
          bodyStmt ::= * vdefAssign_stmt SEMICOLON
          bodyStmt ::= * cdef_stmt SEMICOLON
          bodyStmt ::= * assign_stmt SEMICOLON
          bodyStmt ::= * funcexprStmt SEMICOLON
          bodyStmt ::= * actionStmt
          bodyStmt ::= * once_stmt
          bodyStmt ::= * if_stmt
          bodyStmt ::= * while_stmt
          bodyStmt ::= * for_stmt
          bodyStmt ::= * foreach_stmt
          bodyStmt ::= * switchcase_stmt
          bodyStmt ::= * continue_stmt SEMICOLON
          bodyStmt ::= * break_stmt SEMICOLON
          bodyStmt ::= * return_stmt SEMICOLON
          bodyStmtList ::= bodyStmtList * bodyStmt
          bodyStmtList ::= bodyStmtList * error
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          vdefAssignStatic_stmt ::= * STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          once_start ::= * ONCE
          once_header ::= * once_start LPAREN expr
          once_block ::= * once_header RPAREN stmt
          once_nocond ::= * once_start
          once_block ::= * once_nocond stmt
          once_stmt ::= * once_block
          if_start ::= * IF
          if_header ::= * if_start LPAREN expr
          if_block ::= * if_header RPAREN stmt
          if_block ::= * if_block elif_header RPAREN stmt
          if_stmt ::= * if_block
          if_stmt ::= * if_block else_header stmt
          switchcase_header ::= * SWITCHCASE LPAREN expr
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= * switchcase_header RPAREN LBRACKET case_chunks
          switchcase_block ::= * switchcase_header RPAREN LBRACKET
          switchcase_stmt ::= * switchcase_block RBRACKET
          while_start ::= * WHILE
          while_header ::= * while_start LPAREN expr
          while_stmt ::= * while_header RPAREN stmt
          for_opener ::= * FOR LPAREN
          for_header1 ::= * for_opener for_init_stmt SEMICOLON
          for_header2 ::= * for_header1 expr SEMICOLON
          for_header ::= * for_header2 for_action_stmt
          for_stmt ::= * for_header RPAREN stmt
          foreach_opener ::= * FOREACH LPAREN
          foreach_header ::= * foreach_opener nameList_nonEmpty COLON exprList_nonEmpty
          foreach_stmt ::= * foreach_header RPAREN stmt
          continue_stmt ::= * CONTINUE
          break_stmt ::= * BREAK
          return_stmt ::= * RETURN exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= * ACTIONNAME LPAREN fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                     SEMICOLON shift  393
                          NAME shift  157
                      FUNCTION shift  277
                      LBRACKET shift  398
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                        STATIC shift  230
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                          ONCE shift  350
                            IF shift  346
                    SWITCHCASE shift  219
                         WHILE shift  338
                           FOR shift  213
                       FOREACH shift  208
                      CONTINUE shift  321
                         BREAK shift  320
                        RETURN shift  29
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  204
                         error shift  375
                     vdef_stmt shift  273
                     blockStmt shift  394
                      bodyStmt shift  376
                      lbracket shift  11
                  blockStmtSub shift  118
         vdefAssignStatic_stmt shift  272
               vdefAssign_stmt shift  271
                     cdef_stmt shift  270
                   assign_stmt shift  269
                  funcexprStmt shift  268
                    actionStmt shift  386
                     once_stmt shift  385
                       if_stmt shift  384
                    while_stmt shift  383
                      for_stmt shift  382
                  foreach_stmt shift  381
               switchcase_stmt shift  380
                 continue_stmt shift  267
                    break_stmt shift  266
                   return_stmt shift  265
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
                    once_start shift  226
                   once_header shift  225
                    once_block shift  347
                   once_nocond shift  9
                      if_start shift  224
                     if_header shift  223
                      if_block shift  98
             switchcase_header shift  218
              switchcase_block shift  216
                   while_start shift  215
                  while_header shift  214
                    for_opener shift  19
                   for_header1 shift  48
                   for_header2 shift  21
                    for_header shift  209
                foreach_opener shift  110
                foreach_header shift  206
                     {default} reduce 37

State 18:
      (0) program ::= chunks *
          chunks ::= chunks * chunk
          chunks ::= chunks * error
          chunk ::= * import_chunk SEMICOLON
          chunk ::= * fdef_chunk
          chunk ::= * fdecl_chunk
          chunk ::= * object_chunk
          chunk ::= * vdef_stmt SEMICOLON
          chunk ::= * vdefAssign_global_stmt SEMICOLON
          chunk ::= * cdef_global_stmt SEMICOLON
          chunk ::= * blockStmt
          import_chunk ::= * IMPORT dottedName AS NAME
          import_chunk ::= * IMPORT dottedName
          fdef_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdef_chunk ::= * fdef_header stmt
          fdecl_chunk ::= * FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON
          object_body ::= * OBJECT NAME LBRACKET
          object_body ::= * object_body VAR typedNameList_nonEmpty SEMICOLON
          object_body ::= * object_body method_chunk
          object_chunk ::= * object_body RBRACKET SEMICOLON
          lbracket ::= * LBRACKET
          blockStmt ::= * blockStmtSub rbracket
          blockStmt ::= * lbracket error RBRACKET
          blockStmtSub ::= * lbracket
          blockStmtSub ::= * lbracket bodyStmtList
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_global_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_global_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty

                             $ reduce 0
                        IMPORT shift  102
                      FUNCTION shift  289
                        OBJECT shift  195
                      LBRACKET shift  398
                           VAR shift  107
                         CONST shift  106
                         error shift  418
                         chunk shift  419
                  import_chunk shift  295
                    fdef_chunk shift  416
                   fdecl_chunk shift  415
                  object_chunk shift  414
                     vdef_stmt shift  294
        vdefAssign_global_stmt shift  293
              cdef_global_stmt shift  292
                     blockStmt shift  410
                   fdef_header shift  2
                   object_body shift  101
                      lbracket shift  11
                  blockStmtSub shift  118

State 19:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt ::= * for_init_stmt_nonEmpty
    (194) for_init_stmt ::= *
          for_header1 ::= for_opener * for_init_stmt SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  277
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                     vdef_stmt shift  335
               vdefAssign_stmt shift  334
                     cdef_stmt shift  333
                   assign_stmt shift  332
                          expr shift  143
                      funcexpr shift  285
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
        for_init_stmt_nonEmpty shift  212
                 for_init_stmt shift  211
                     {default} reduce 194

State 20:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdef_stmt ::= * VAR nameList_nonEmpty
          vdefAssign_stmt ::= * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty
          cdef_stmt ::= * CONST nameList_nonEmpty ASSIGN exprList_nonEmpty
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_init_stmt_nonEmpty ::= * vdef_stmt
          for_init_stmt_nonEmpty ::= * vdefAssign_stmt
          for_init_stmt_nonEmpty ::= * cdef_stmt
          for_init_stmt_nonEmpty ::= * assign_stmt
          for_init_stmt_nonEmpty ::= * for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA * for_init_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  277
                           VAR shift  113
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                         CONST shift  111
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                     vdef_stmt shift  335
               vdefAssign_stmt shift  334
                     cdef_stmt shift  333
                   assign_stmt shift  332
                          expr shift  143
                      funcexpr shift  285
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
        for_init_stmt_nonEmpty shift  331

State 21:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
    (198) for_action_stmt ::= *
          for_action_stmt ::= * for_action_stmt_nonEmpty
          for_header ::= for_header2 * for_action_stmt
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                   assign_stmt shift  327
                  funcexprStmt shift  328
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
      for_action_stmt_nonEmpty shift  210
               for_action_stmt shift  325
                     {default} reduce 198

State 22:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexprStmt ::= * funcexpr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= * lvalue
          lvalueList_nonEmpty ::= * lvalueList_nonEmpty COMMA lvalue
          assign_stmt ::= * lvalue ASSIGN expr
          assign_stmt ::= * lvalueList_nonEmpty ASSIGN exprList_nonEmpty
          assign_stmt ::= * INC lvalue
          assign_stmt ::= * lvalue INC
          assign_stmt ::= * DEC lvalue
          assign_stmt ::= * lvalue DEC
          assign_stmt ::= * lvalue IADD expr
          assign_stmt ::= * lvalue ISUB expr
          assign_stmt ::= * lvalue IMUL expr
          assign_stmt ::= * lvalue IDIV expr
          assign_stmt ::= * lvalue IMOD expr
          assign_stmt ::= * lvalue ILSH expr
          assign_stmt ::= * lvalue IRSH expr
          assign_stmt ::= * lvalue IBND expr
          assign_stmt ::= * lvalue IBOR expr
          assign_stmt ::= * lvalue IBXR expr
          for_action_stmt_nonEmpty ::= * funcexprStmt
          for_action_stmt_nonEmpty ::= * assign_stmt
          for_action_stmt_nonEmpty ::= * for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA * for_action_stmt_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                           INC shift  37
                           DEC shift  36
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                   assign_stmt shift  327
                  funcexprStmt shift  328
                          expr shift  143
                      funcexpr shift  168
               lambdaExprStart shift  12
                        lvalue shift  160
           lvalueList_nonEmpty shift  179
      for_action_stmt_nonEmpty shift  326

State 23:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (87) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          actionStmt ::= ACTIONNAME LPAREN * fArgs RPAREN SEMICOLON
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  184
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                        STRING shift  363
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  146
                      funcexpr shift  285
               lambdaExprStart shift  12
                          fArg shift  362
                fArgs_nonEmpty shift  237
                         fArgs shift  203
                     {default} reduce 87

State 24:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (87) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN
          expr ::= ACTIONNAME LPAREN * fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  184
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                        STRING shift  363
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  146
                      funcexpr shift  285
               lambdaExprStart shift  12
                          fArg shift  362
                fArgs_nonEmpty shift  237
                         fArgs shift  235
                     {default} reduce 87

State 25:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (87) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= CONDITIONNAME LPAREN * fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  184
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                        STRING shift  363
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  146
                      funcexpr shift  285
               lambdaExprStart shift  12
                          fArg shift  362
                fArgs_nonEmpty shift  237
                         fArgs shift  234
                     {default} reduce 87

State 26:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (87) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          funcexpr ::= expr LPAREN * fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  184
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                        STRING shift  363
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  146
                      funcexpr shift  285
               lambdaExprStart shift  12
                          fArg shift  362
                fArgs_nonEmpty shift  237
                         fArgs shift  198
                     {default} reduce 87

State 27:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (87) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= NAME LPAREN * fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  184
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                        STRING shift  363
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  146
                      funcexpr shift  285
               lambdaExprStart shift  12
                          fArg shift  362
                fArgs_nonEmpty shift  237
                         fArgs shift  197
                     {default} reduce 87

State 28:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= * fArg
          fArgs_nonEmpty ::= * fArgs_nonEmpty COMMA fArg
     (87) fArgs ::= *
          fArgs ::= * fArgs_nonEmpty
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= KILLS LPAREN * fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  184
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                        STRING shift  363
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  146
                      funcexpr shift  285
               lambdaExprStart shift  12
                          fArg shift  362
                fArgs_nonEmpty shift  237
                         fArgs shift  196
                     {default} reduce 87

State 29:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
     (73) exprList ::= *
          exprList ::= * exprList_nonEmpty
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          return_stmt ::= RETURN * exprList
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  205
                          expr shift  142
                      funcexpr shift  263
                      exprList shift  319
               lambdaExprStart shift  12
                     {default} reduce 73

State 30:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= case_chunks * case_chunk
          default_clause ::= * DEFAULT COLON
          default_chunk ::= * default_clause
          default_chunk ::= * default_clause bodyStmtList
          switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks * default_chunk
    (181) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks *

                          CASE shift  342
                       DEFAULT shift  201
                    case_start shift  35
                   case_clause shift  16
                    case_chunk shift  317
                default_clause shift  14
                 default_chunk shift  315
                     {default} reduce 181

State 31:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= * expr
          fArg ::= * STRING
          fArg ::= * NAME ASSIGN expr
          fArgs_nonEmpty ::= fArgs_nonEmpty COMMA * fArg
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  184
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                        STRING shift  363
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  146
                      funcexpr shift  285
               lambdaExprStart shift  12
                          fArg shift  361

State 32:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  187
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 33:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  188
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 34:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          foreach_header ::= foreach_opener nameList_nonEmpty COLON * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  207
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 35:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          case_clause ::= case_start * exprList_nonEmpty COLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  178
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 36:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= DEC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  143
                      funcexpr shift  285
               lambdaExprStart shift  12
                        lvalue shift  351

State 37:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          assign_stmt ::= INC * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  143
                      funcexpr shift  285
               lambdaExprStart shift  12
                        lvalue shift  352

State 38:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalueList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  227
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 39:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= * NAME
          lvalue ::= * expr LSQBRACKET expr RSQBRACKET
          lvalue ::= * expr PERIOD NAME
          lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA * lvalue
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  157
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  143
                      funcexpr shift  285
               lambdaExprStart shift  12
                        lvalue shift  353

State 40:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          cdef_stmt ::= CONST nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  228
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 41:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  229
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 42:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN * exprList_nonEmpty
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  231
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 43:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= LIST LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  114
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 44:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= VARRAY LPAREN * exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  115
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 45:
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= LSQBRACKET * exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  116
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 46:
          fdef_rettypes ::= COLON * exprList_nonEmpty
          exprList_nonEmpty ::= * funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= * expr
          exprList_nonEmpty ::= * exprList_nonEmpty COMMA expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
             exprList_nonEmpty shift  286
                          expr shift  142
                      funcexpr shift  263
               lambdaExprStart shift  12

State 47:
          case_start ::= * CASE
          case_clause ::= * case_start exprList_nonEmpty COLON
          case_chunk ::= * case_clause
          case_chunk ::= * case_clause bodyStmtList
          case_chunks ::= * case_chunks case_chunk
          case_chunks ::= * case_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN LBRACKET * case_chunks
    (182) switchcase_block ::= switchcase_header RPAREN LBRACKET *

                          CASE shift  342
                    case_start shift  35
                   case_clause shift  16
                    case_chunk shift  314
                   case_chunks shift  30
                     {default} reduce 182

State 48:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          for_header2 ::= for_header1 * expr SEMICOLON
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  120
                      funcexpr shift  285
               lambdaExprStart shift  12

State 49:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          while_header ::= while_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  126
                      funcexpr shift  285
               lambdaExprStart shift  12

State 50:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          switchcase_header ::= SWITCHCASE LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  127
                      funcexpr shift  285
               lambdaExprStart shift  12

State 51:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          elif_header ::= elif_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  128
                      funcexpr shift  285
               lambdaExprStart shift  12

State 52:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          if_header ::= if_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  129
                      funcexpr shift  285
               lambdaExprStart shift  12

State 53:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          once_header ::= once_start LPAREN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  130
                      funcexpr shift  285
               lambdaExprStart shift  12

State 54:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBXR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  131
                      funcexpr shift  285
               lambdaExprStart shift  12

State 55:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBOR * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  132
                      funcexpr shift  285
               lambdaExprStart shift  12

State 56:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IBND * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  133
                      funcexpr shift  285
               lambdaExprStart shift  12

State 57:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IRSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  134
                      funcexpr shift  285
               lambdaExprStart shift  12

State 58:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ILSH * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  135
                      funcexpr shift  285
               lambdaExprStart shift  12

State 59:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMOD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  136
                      funcexpr shift  285
               lambdaExprStart shift  12

State 60:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IDIV * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  137
                      funcexpr shift  285
               lambdaExprStart shift  12

State 61:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IMUL * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  138
                      funcexpr shift  285
               lambdaExprStart shift  12

State 62:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ISUB * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  139
                      funcexpr shift  285
               lambdaExprStart shift  12

State 63:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue IADD * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  140
                      funcexpr shift  285
               lambdaExprStart shift  12

State 64:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          assign_stmt ::= lvalue ASSIGN * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  141
                      funcexpr shift  285
               lambdaExprStart shift  12

State 65:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= LNOT * expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  149
                      funcexpr shift  285
               lambdaExprStart shift  12

State 66:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= BITNOT * expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  169
                      funcexpr shift  285
               lambdaExprStart shift  12

State 67:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  170
                      funcexpr shift  285
               lambdaExprStart shift  12

State 68:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  171
                      funcexpr shift  285
               lambdaExprStart shift  12

State 69:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= L2V LPAREN * expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  121
                      funcexpr shift  285
               lambdaExprStart shift  12

State 70:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
     (94) commaSkippable ::= COMMA *
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  147
                      funcexpr shift  285
               lambdaExprStart shift  12
                     {default} reduce 94

State 71:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  122
                      funcexpr shift  285
               lambdaExprStart shift  12

State 72:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          lvalue ::= expr LSQBRACKET * expr RSQBRACKET
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  123
                      funcexpr shift  285
               lambdaExprStart shift  12

State 73:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= expr LOR * expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  148
                      funcexpr shift  285
               lambdaExprStart shift  12

State 74:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= expr LAND * expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  150
                      funcexpr shift  285
               lambdaExprStart shift  12

State 75:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= expr GT * expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  151
                      funcexpr shift  285
               lambdaExprStart shift  12

State 76:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= expr LT * expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  152
                      funcexpr shift  285
               lambdaExprStart shift  12

State 77:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= expr GE * expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  153
                      funcexpr shift  285
               lambdaExprStart shift  12

State 78:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= expr LE * expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  154
                      funcexpr shift  285
               lambdaExprStart shift  12

State 79:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= expr NE * expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  155
                      funcexpr shift  285
               lambdaExprStart shift  12

State 80:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= expr EQ * expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  156
                      funcexpr shift  285
               lambdaExprStart shift  12

State 81:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= expr BITXOR * expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  162
                      funcexpr shift  285
               lambdaExprStart shift  12

State 82:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= expr BITOR * expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  161
                      funcexpr shift  285
               lambdaExprStart shift  12

State 83:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= expr BITAND * expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  163
                      funcexpr shift  285
               lambdaExprStart shift  12

State 84:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= expr RSHIFT * expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  164
                      funcexpr shift  285
               lambdaExprStart shift  12

State 85:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= expr LSHIFT * expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  165
                      funcexpr shift  285
               lambdaExprStart shift  12

State 86:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  172
                      funcexpr shift  285
               lambdaExprStart shift  12

State 87:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  173
                      funcexpr shift  285
               lambdaExprStart shift  12

State 88:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= expr MULTIPLY * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  174
                      funcexpr shift  285
               lambdaExprStart shift  12

State 89:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  166
                      funcexpr shift  285
               lambdaExprStart shift  12

State 90:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  167
                      funcexpr shift  285
               lambdaExprStart shift  12

State 91:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK expr COLON * expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  144
                      funcexpr shift  285
               lambdaExprStart shift  12

State 92:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= expr QMARK * expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  124
                      funcexpr shift  285
               lambdaExprStart shift  12

State 93:
          typedName ::= NAME COLON * expr
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  145
                      funcexpr shift  285
               lambdaExprStart shift  12

State 94:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          fArg ::= NAME ASSIGN * expr
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  125
                      funcexpr shift  285
               lambdaExprStart shift  12

State 95:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET * expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  119
                      funcexpr shift  285
               lambdaExprStart shift  12

State 96:
          expr ::= * funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
          exprList_nonEmpty ::= exprList_nonEmpty COMMA * expr
          expr ::= * NUMBER
          expr ::= * KILLS
          expr ::= * NAME
          expr ::= * expr PERIOD NAME
          expr ::= * expr LSQBRACKET expr RSQBRACKET
          lambdaExprStart ::= * FUNCTION LPAREN typedNameList RPAREN fdef_rettypes
          expr ::= * lambdaExprStart stmt
          funcexpr ::= * NAME LPAREN fArgs RPAREN
          funcexpr ::= * expr LPAREN fArgs RPAREN
          expr ::= * funcexpr
          expr ::= * LPAREN expr RPAREN
          expr ::= * LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET
          expr ::= * L2V LPAREN expr RPAREN
          expr ::= * MAPSTRING LPAREN STRING RPAREN
          expr ::= * UNIT LPAREN STRING RPAREN
          expr ::= * SWITCH LPAREN STRING RPAREN
          expr ::= * LOCATION LPAREN STRING RPAREN
          expr ::= * STATTXTTBL LPAREN STRING RPAREN
          expr ::= * VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * LIST LPAREN exprList_nonEmpty commaSkippable RPAREN
          expr ::= * expr QMARK expr COLON expr
          expr ::= * expr PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr MULTIPLY expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr LSHIFT expr
          expr ::= * expr RSHIFT expr
          expr ::= * expr BITAND expr
          expr ::= * expr BITOR expr
          expr ::= * expr BITXOR expr
          expr ::= * PLUS expr
          expr ::= * MINUS expr
          expr ::= * BITNOT expr
          expr ::= * expr EQ expr
          expr ::= * expr NE expr
          expr ::= * expr LE expr
          expr ::= * expr GE expr
          expr ::= * expr LT expr
          expr ::= * expr GT expr
          expr ::= * expr LAND expr
          expr ::= * expr LOR expr
          expr ::= * LNOT expr
          expr ::= * CONDITIONNAME LPAREN fArgs RPAREN
          expr ::= * KILLS LPAREN fArgs RPAREN
          expr ::= * ACTIONNAME LPAREN fArgs RPAREN

                          LNOT shift  65
                          PLUS shift  68
                         MINUS shift  67
                        BITNOT shift  66
                        LPAREN shift  71
                    LSQBRACKET shift  45
                          NAME shift  278
                      FUNCTION shift  277
                        NUMBER shift  401
                         KILLS shift  279
                           L2V shift  258
                     MAPSTRING shift  257
                          UNIT shift  254
                        SWITCH shift  251
                      LOCATION shift  248
                    STATTXTTBL shift  245
                        VARRAY shift  242
                          LIST shift  240
                 CONDITIONNAME shift  238
                    ACTIONNAME shift  236
                          expr shift  147
                      funcexpr shift  285
               lambdaExprStart shift  12

State 97:
          method_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (65) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  276
                 typedNameList shift  190
        typedNameList_nonEmpty shift  310
                     typedName shift  200
                     {default} reduce 65

State 98:
          elif_start ::= * ELSE IF
          elif_header ::= * elif_start LPAREN expr
          if_block ::= if_block * elif_header RPAREN stmt
          else_header ::= * ELSE
    (168) if_stmt ::= if_block *
          if_stmt ::= if_block * else_header stmt

                          ELSE shift  222
                    elif_start shift  221
                   elif_header shift  220
                   else_header shift  3
                     {default} reduce 168

State 99:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (65) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN * typedNameList RPAREN fdef_rettypes

                          NAME shift  276
                 typedNameList shift  199
        typedNameList_nonEmpty shift  310
                     typedName shift  200
                     {default} reduce 65

State 100:
          fdef_header ::= FUNCTION NAME LPAREN * typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN * typedNameList RPAREN SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
     (65) typedNameList ::= *
          typedNameList ::= * typedNameList_nonEmpty

                          NAME shift  276
                 typedNameList shift  287
        typedNameList_nonEmpty shift  310
                     typedName shift  200
                     {default} reduce 65

State 101:
          object_body ::= object_body * VAR typedNameList_nonEmpty SEMICOLON
          method_header ::= * FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes
          method_chunk ::= * method_header stmt
          object_body ::= object_body * method_chunk
          object_chunk ::= object_body * RBRACKET SEMICOLON

                      FUNCTION shift  192
                           VAR shift  103
                      RBRACKET shift  189
                 method_header shift  1
                  method_chunk shift  297

State 102:
          precedingDots ::= * PERIOD
          precedingDots ::= * precedingDots PERIOD
          dottedName ::= * NAME
          dottedName ::= * precedingDots NAME
          dottedName ::= * dottedName PERIOD NAME
          import_chunk ::= IMPORT * dottedName AS NAME
          import_chunk ::= IMPORT * dottedName

                        PERIOD shift  409
                          NAME shift  406
                 precedingDots shift  186
                    dottedName shift  185

State 103:
          object_body ::= object_body VAR * typedNameList_nonEmpty SEMICOLON
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty

                          NAME shift  276
        typedNameList_nonEmpty shift  193
                     typedName shift  200

State 104:
          typedName ::= * NAME
          typedName ::= * NAME COLON expr
          typedNameList_nonEmpty ::= * typedName
          typedNameList_nonEmpty ::= * typedName COMMA typedNameList_nonEmpty
          typedNameList_nonEmpty ::= typedName COMMA * typedNameList_nonEmpty

                          NAME shift  276
        typedNameList_nonEmpty shift  311
                     typedName shift  200

State 105:
     (19) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN * SEMICOLON

                     SEMICOLON shift  303
                         COLON shift  46
                 fdef_rettypes shift  304
                     {default} reduce 19

State 106:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_global_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  357
             nameList_nonEmpty shift  175

State 107:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_global_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  357
             nameList_nonEmpty shift  176

State 108:
     (19) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  46
                 fdef_rettypes shift  299
                     {default} reduce 19

State 109:
     (19) fdef_rettypes ::= *
          fdef_rettypes ::= * COLON exprList_nonEmpty
          lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN * fdef_rettypes

                         COLON shift  46
                 fdef_rettypes shift  309
                     {default} reduce 19

State 110:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          foreach_header ::= foreach_opener * nameList_nonEmpty COLON exprList_nonEmpty

                          NAME shift  357
             nameList_nonEmpty shift  177

State 111:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          cdef_stmt ::= CONST * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  357
             nameList_nonEmpty shift  180

State 112:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  357
             nameList_nonEmpty shift  181

State 113:
          nameList_nonEmpty ::= * NAME
          nameList_nonEmpty ::= * nameList_nonEmpty COMMA NAME
          vdef_stmt ::= VAR * nameList_nonEmpty
          vdefAssign_stmt ::= VAR * nameList_nonEmpty ASSIGN exprList_nonEmpty

                          NAME shift  357
             nameList_nonEmpty shift  182

State 114:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (95) commaSkippable ::= *
          expr ::= LIST LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  70
                commaSkippable shift  239
                     {default} reduce 95

State 115:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (95) commaSkippable ::= *
          expr ::= VARRAY LPAREN exprList_nonEmpty * commaSkippable RPAREN

                         COMMA shift  70
                commaSkippable shift  241
                     {default} reduce 95

State 116:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          commaSkippable ::= * COMMA
     (95) commaSkippable ::= *
          expr ::= LSQBRACKET exprList_nonEmpty * commaSkippable RSQBRACKET

                         COMMA shift  70
                commaSkippable shift  233
                     {default} reduce 95

State 117:
          numList_nonEmpty ::= * NUMBER
          numList_nonEmpty ::= * numList_nonEmpty COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET * numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  261
              numList_nonEmpty shift  183

State 118:
          rbracket ::= * RBRACKET
          blockStmt ::= blockStmtSub * rbracket

                      RBRACKET shift  397
                      rbracket shift  396

State 119:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                    RSQBRACKET shift  305

State 120:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          for_header2 ::= for_header1 expr * SEMICOLON

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     SEMICOLON shift  329

State 121:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= L2V LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                        RPAREN shift  371

State 122:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= LPAREN expr * RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                        RPAREN shift  374

State 123:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          expr ::= expr LSQBRACKET expr * RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr LSQBRACKET expr * RSQBRACKET

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                    RSQBRACKET shift  158

State 124:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr QMARK expr * COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                         COLON shift  91

State 125:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (84) fArg ::= NAME ASSIGN expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 84

State 126:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (185) while_header ::= while_start LPAREN expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 185

State 127:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (170) switchcase_header ::= SWITCHCASE LPAREN expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 170

State 128:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (165) elif_header ::= elif_start LPAREN expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 165

State 129:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (162) if_header ::= if_start LPAREN expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 162

State 130:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (156) once_header ::= once_start LPAREN expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 156

State 131:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (154) assign_stmt ::= lvalue IBXR expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 154

State 132:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (153) assign_stmt ::= lvalue IBOR expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 153

State 133:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (152) assign_stmt ::= lvalue IBND expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 152

State 134:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (151) assign_stmt ::= lvalue IRSH expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 151

State 135:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (150) assign_stmt ::= lvalue ILSH expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 150

State 136:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (149) assign_stmt ::= lvalue IMOD expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 149

State 137:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (148) assign_stmt ::= lvalue IDIV expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 148

State 138:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (147) assign_stmt ::= lvalue IMUL expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 147

State 139:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (146) assign_stmt ::= lvalue ISUB expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 146

State 140:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (145) assign_stmt ::= lvalue IADD expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 145

State 141:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (139) assign_stmt ::= lvalue ASSIGN expr *

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 139

State 142:
     (71) exprList_nonEmpty ::= expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 71

State 143:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
          lvalue ::= expr * LSQBRACKET expr RSQBRACKET
          lvalue ::= expr * PERIOD NAME

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  72
                        PERIOD shift  264

State 144:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
    (105) expr ::= expr QMARK expr COLON expr *
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 105

State 145:
     (62) typedName ::= NAME COLON expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 62

State 146:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
     (82) fArg ::= expr *
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 82

State 147:
     (72) exprList_nonEmpty ::= exprList_nonEmpty COMMA expr *
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                         QMARK shift  92
                           LOR shift  73
                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 72

State 148:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (126) expr ::= expr LOR expr *

                          LAND shift  74
                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 126

State 149:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr
    (127) expr ::= LNOT expr *

                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 127

State 150:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
    (125) expr ::= expr LAND expr *
          expr ::= expr * LOR expr

                            EQ shift  80
                            LE shift  78
                            LT shift  76
                            GE shift  77
                            GT shift  75
                            NE shift  79
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 125

State 151:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
    (124) expr ::= expr GT expr *
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 124

State 152:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
    (123) expr ::= expr LT expr *
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 123

State 153:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
    (122) expr ::= expr GE expr *
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 122

State 154:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
    (121) expr ::= expr LE expr *
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 121

State 155:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
    (120) expr ::= expr NE expr *
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 120

State 156:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
    (119) expr ::= expr EQ expr *
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                            EQ error
                            LE error
                            LT error
                            GE error
                            GT error
                            NE error
                         BITOR shift  82
                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 119

State 157:
     (77) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN
    (134) lvalue ::= NAME *

                        ASSIGN reduce 134
                         COMMA reduce 134
                        LPAREN shift  27
                     SEMICOLON reduce 134
                        RPAREN reduce 134
                           INC reduce 134
                           DEC reduce 134
                          IADD reduce 134
                          ISUB reduce 134
                          IMUL reduce 134
                          IDIV reduce 134
                          IMOD reduce 134
                          ILSH reduce 134
                          IRSH reduce 134
                          IBND reduce 134
                          IBOR reduce 134
                          IBXR reduce 134
                     {default} reduce 77

State 158:
     (79) expr ::= expr LSQBRACKET expr RSQBRACKET *
    (135) lvalue ::= expr LSQBRACKET expr RSQBRACKET *

                        ASSIGN reduce 135
                         COMMA reduce 135
                     SEMICOLON reduce 135
                        RPAREN reduce 135
                           INC reduce 135
                           DEC reduce 135
                          IADD reduce 135
                          ISUB reduce 135
                          IMUL reduce 135
                          IDIV reduce 135
                          IMOD reduce 135
                          ILSH reduce 135
                          IRSH reduce 135
                          IBND reduce 135
                          IBOR reduce 135
                          IBXR reduce 135
                     {default} reduce 79

State 159:
     (78) expr ::= expr PERIOD NAME *
    (136) lvalue ::= expr PERIOD NAME *

                        ASSIGN reduce 136
                         COMMA reduce 136
                     SEMICOLON reduce 136
                        RPAREN reduce 136
                           INC reduce 136
                           DEC reduce 136
                          IADD reduce 136
                          ISUB reduce 136
                          IMUL reduce 136
                          IDIV reduce 136
                          IMOD reduce 136
                          ILSH reduce 136
                          IRSH reduce 136
                          IBND reduce 136
                          IBOR reduce 136
                          IBXR reduce 136
                     {default} reduce 78

State 160:
    (137) lvalueList_nonEmpty ::= lvalue *
          assign_stmt ::= lvalue * ASSIGN expr
          assign_stmt ::= lvalue * INC
          assign_stmt ::= lvalue * DEC
          assign_stmt ::= lvalue * IADD expr
          assign_stmt ::= lvalue * ISUB expr
          assign_stmt ::= lvalue * IMUL expr
          assign_stmt ::= lvalue * IDIV expr
          assign_stmt ::= lvalue * IMOD expr
          assign_stmt ::= lvalue * ILSH expr
          assign_stmt ::= lvalue * IRSH expr
          assign_stmt ::= lvalue * IBND expr
          assign_stmt ::= lvalue * IBOR expr
          assign_stmt ::= lvalue * IBXR expr

                        ASSIGN shift  64
                           INC shift  355
                           DEC shift  354
                          IADD shift  63
                          ISUB shift  62
                          IMUL shift  61
                          IDIV shift  60
                          IMOD shift  59
                          ILSH shift  58
                          IRSH shift  57
                          IBND shift  56
                          IBOR shift  55
                          IBXR shift  54
                     {default} reduce 137

State 161:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
    (114) expr ::= expr BITOR expr *
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITXOR shift  81
                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 114

State 162:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (115) expr ::= expr BITXOR expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        BITAND shift  83
                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 115

State 163:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
    (113) expr ::= expr BITAND expr *
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LSHIFT shift  85
                        RSHIFT shift  84
                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 113

State 164:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
    (112) expr ::= expr RSHIFT expr *
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 112

State 165:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
    (111) expr ::= expr LSHIFT expr *
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                          PLUS shift  90
                         MINUS shift  89
                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 111

State 166:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
    (107) expr ::= expr MINUS expr *
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 107

State 167:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
    (106) expr ::= expr PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        DIVIDE shift  87
                      MULTIPLY shift  88
                           MOD shift  86
                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 106

State 168:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (89) funcexprStmt ::= funcexpr *
     (92) expr ::= funcexpr *

                         COMMA reduce 89
                    LSQBRACKET shift  284
                     SEMICOLON reduce 89
                        RPAREN reduce 89
                     {default} reduce 92

State 169:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (118) expr ::= BITNOT expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 118

State 170:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (117) expr ::= MINUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 117

State 171:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
    (116) expr ::= PLUS expr *
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 116

State 172:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
    (110) expr ::= expr MOD expr *
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 110

State 173:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
          expr ::= expr * DIVIDE expr
    (109) expr ::= expr DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 109

State 174:
          expr ::= expr * PERIOD NAME
          expr ::= expr * LSQBRACKET expr RSQBRACKET
          funcexpr ::= expr * LPAREN fArgs RPAREN
          expr ::= expr * QMARK expr COLON expr
          expr ::= expr * PLUS expr
          expr ::= expr * MINUS expr
          expr ::= expr * MULTIPLY expr
    (108) expr ::= expr MULTIPLY expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * LSHIFT expr
          expr ::= expr * RSHIFT expr
          expr ::= expr * BITAND expr
          expr ::= expr * BITOR expr
          expr ::= expr * BITXOR expr
          expr ::= expr * EQ expr
          expr ::= expr * NE expr
          expr ::= expr * LE expr
          expr ::= expr * GE expr
          expr ::= expr * LT expr
          expr ::= expr * GT expr
          expr ::= expr * LAND expr
          expr ::= expr * LOR expr

                        LPAREN shift  26
                    LSQBRACKET shift  95
                        PERIOD shift  280
                     {default} reduce 108

State 175:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_global_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  32
                         COMMA shift  232

State 176:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (128) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_global_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  33
                         COMMA shift  232
                     {default} reduce 128

State 177:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          foreach_header ::= foreach_opener nameList_nonEmpty * COLON exprList_nonEmpty

                         COMMA shift  232
                         COLON shift  34

State 178:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
          case_clause ::= case_start exprList_nonEmpty * COLON

                         COMMA shift  96
                         COLON shift  341

State 179:
          lvalueList_nonEmpty ::= lvalueList_nonEmpty * COMMA lvalue
          assign_stmt ::= lvalueList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  38
                         COMMA shift  39

State 180:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          cdef_stmt ::= CONST nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  40
                         COMMA shift  232

State 181:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
          vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  41
                         COMMA shift  232

State 182:
          nameList_nonEmpty ::= nameList_nonEmpty * COMMA NAME
    (128) vdef_stmt ::= VAR nameList_nonEmpty *
          vdefAssign_stmt ::= VAR nameList_nonEmpty * ASSIGN exprList_nonEmpty

                        ASSIGN shift  42
                         COMMA shift  232
                     {default} reduce 128

State 183:
          numList_nonEmpty ::= numList_nonEmpty * COMMA NUMBER
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty * RSQBRACKET RSQBRACKET

                         COMMA shift  260
                    RSQBRACKET shift  259

State 184:
     (77) expr ::= NAME *
          fArg ::= NAME * ASSIGN expr
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        ASSIGN shift  94
                        LPAREN shift  27
                     {default} reduce 77

State 185:
          dottedName ::= dottedName * PERIOD NAME
          import_chunk ::= IMPORT dottedName * AS NAME
     (18) import_chunk ::= IMPORT dottedName *

                        PERIOD shift  291
                            AS shift  290
                     {default} reduce 18

State 186:
          precedingDots ::= precedingDots * PERIOD
          dottedName ::= precedingDots * NAME

                        PERIOD shift  408
                          NAME shift  407

State 187:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (133) cdef_global_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 133

State 188:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (131) vdefAssign_global_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 131

State 189:
          object_chunk ::= object_body RBRACKET * SEMICOLON

                     SEMICOLON shift  296

State 190:
          method_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  108

State 191:
          method_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  97

State 192:
          method_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes

                          NAME shift  191

State 193:
          object_body ::= object_body VAR typedNameList_nonEmpty * SEMICOLON

                     SEMICOLON shift  300

State 194:
          object_body ::= OBJECT NAME * LBRACKET

                      LBRACKET shift  301

State 195:
          object_body ::= OBJECT * NAME LBRACKET

                          NAME shift  194

State 196:
          expr ::= KILLS LPAREN fArgs * RPAREN

                        RPAREN shift  306

State 197:
          funcexpr ::= NAME LPAREN fArgs * RPAREN

                        RPAREN shift  307

State 198:
          funcexpr ::= expr LPAREN fArgs * RPAREN

                        RPAREN shift  308

State 199:
          lambdaExprStart ::= FUNCTION LPAREN typedNameList * RPAREN fdef_rettypes

                        RPAREN shift  109

State 200:
     (63) typedNameList_nonEmpty ::= typedName *
          typedNameList_nonEmpty ::= typedName * COMMA typedNameList_nonEmpty

                         COMMA shift  104
                     {default} reduce 63

State 201:
          default_clause ::= DEFAULT * COLON

                         COLON shift  316

State 202:
          actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN * SEMICOLON
    (213) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     SEMICOLON shift  318
                     {default} reduce 213

State 203:
          actionStmt ::= ACTIONNAME LPAREN fArgs * RPAREN SEMICOLON
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  202

State 204:
          actionStmt ::= ACTIONNAME * LPAREN fArgs RPAREN SEMICOLON
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  23

State 205:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
     (74) exprList ::= exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 74

State 206:
          foreach_stmt ::= foreach_header * RPAREN stmt

                        RPAREN shift  4

State 207:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (205) foreach_header ::= foreach_opener nameList_nonEmpty COLON exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 205

State 208:
          foreach_opener ::= FOREACH * LPAREN

                        LPAREN shift  323

State 209:
          for_stmt ::= for_header * RPAREN stmt

                        RPAREN shift  5

State 210:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (199) for_action_stmt ::= for_action_stmt_nonEmpty *

                         COMMA shift  22
                     {default} reduce 199

State 211:
          for_header1 ::= for_opener for_init_stmt * SEMICOLON

                     SEMICOLON shift  330

State 212:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (193) for_init_stmt ::= for_init_stmt_nonEmpty *

                         COMMA shift  20
                     {default} reduce 193

State 213:
          for_opener ::= FOR * LPAREN

                        LPAREN shift  336

State 214:
          while_stmt ::= while_header * RPAREN stmt

                        RPAREN shift  6

State 215:
          while_header ::= while_start * LPAREN expr

                        LPAREN shift  49

State 216:
          switchcase_stmt ::= switchcase_block * RBRACKET

                      RBRACKET shift  339

State 217:
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header RPAREN * LBRACKET case_chunks
          switchcase_block ::= switchcase_header RPAREN * LBRACKET

                      LBRACKET shift  47

State 218:
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks default_chunk
          switchcase_block ::= switchcase_header * RPAREN LBRACKET case_chunks
          switchcase_block ::= switchcase_header * RPAREN LBRACKET

                        RPAREN shift  217

State 219:
          switchcase_header ::= SWITCHCASE * LPAREN expr

                        LPAREN shift  50

State 220:
          if_block ::= if_block elif_header * RPAREN stmt

                        RPAREN shift  7

State 221:
          elif_header ::= elif_start * LPAREN expr

                        LPAREN shift  51

State 222:
          elif_start ::= ELSE * IF
    (167) else_header ::= ELSE *

                            IF shift  344
                     {default} reduce 167

State 223:
          if_block ::= if_header * RPAREN stmt

                        RPAREN shift  8

State 224:
          if_header ::= if_start * LPAREN expr

                        LPAREN shift  52

State 225:
          once_block ::= once_header * RPAREN stmt

                        RPAREN shift  10

State 226:
          once_header ::= once_start * LPAREN expr
    (158) once_nocond ::= once_start *

                        LPAREN shift  53
                     {default} reduce 158

State 227:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (140) assign_stmt ::= lvalueList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 140

State 228:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (132) cdef_stmt ::= CONST nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 132

State 229:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (130) vdefAssignStatic_stmt ::= STATIC VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 130

State 230:
          vdefAssignStatic_stmt ::= STATIC * VAR nameList_nonEmpty ASSIGN exprList_nonEmpty

                           VAR shift  112

State 231:
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr
    (129) vdefAssign_stmt ::= VAR nameList_nonEmpty ASSIGN exprList_nonEmpty *

                         COMMA shift  96
                     {default} reduce 129

State 232:
          nameList_nonEmpty ::= nameList_nonEmpty COMMA * NAME

                          NAME shift  356

State 233:
          expr ::= LSQBRACKET exprList_nonEmpty commaSkippable * RSQBRACKET

                    RSQBRACKET shift  358

State 234:
          expr ::= CONDITIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  359

State 235:
          expr ::= ACTIONNAME LPAREN fArgs * RPAREN

                        RPAREN shift  360

State 236:
          expr ::= ACTIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  24

State 237:
          fArgs_nonEmpty ::= fArgs_nonEmpty * COMMA fArg
     (88) fArgs ::= fArgs_nonEmpty *

                         COMMA shift  31
                     {default} reduce 88

State 238:
          expr ::= CONDITIONNAME * LPAREN fArgs RPAREN

                        LPAREN shift  25

State 239:
          expr ::= LIST LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  364

State 240:
          expr ::= LIST * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  43

State 241:
          expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable * RPAREN

                        RPAREN shift  365

State 242:
          expr ::= VARRAY * LPAREN exprList_nonEmpty commaSkippable RPAREN

                        LPAREN shift  44

State 243:
          expr ::= STATTXTTBL LPAREN STRING * RPAREN

                        RPAREN shift  366

State 244:
          expr ::= STATTXTTBL LPAREN * STRING RPAREN

                        STRING shift  243

State 245:
          expr ::= STATTXTTBL * LPAREN STRING RPAREN

                        LPAREN shift  244

State 246:
          expr ::= LOCATION LPAREN STRING * RPAREN

                        RPAREN shift  367

State 247:
          expr ::= LOCATION LPAREN * STRING RPAREN

                        STRING shift  246

State 248:
          expr ::= LOCATION * LPAREN STRING RPAREN

                        LPAREN shift  247

State 249:
          expr ::= SWITCH LPAREN STRING * RPAREN

                        RPAREN shift  368

State 250:
          expr ::= SWITCH LPAREN * STRING RPAREN

                        STRING shift  249

State 251:
          expr ::= SWITCH * LPAREN STRING RPAREN

                        LPAREN shift  250

State 252:
          expr ::= UNIT LPAREN STRING * RPAREN

                        RPAREN shift  369

State 253:
          expr ::= UNIT LPAREN * STRING RPAREN

                        STRING shift  252

State 254:
          expr ::= UNIT * LPAREN STRING RPAREN

                        LPAREN shift  253

State 255:
          expr ::= MAPSTRING LPAREN STRING * RPAREN

                        RPAREN shift  370

State 256:
          expr ::= MAPSTRING LPAREN * STRING RPAREN

                        STRING shift  255

State 257:
          expr ::= MAPSTRING * LPAREN STRING RPAREN

                        LPAREN shift  256

State 258:
          expr ::= L2V * LPAREN expr RPAREN

                        LPAREN shift  69

State 259:
          exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  372

State 260:
          numList_nonEmpty ::= numList_nonEmpty COMMA * NUMBER

                        NUMBER shift  373

State 261:
     (59) numList_nonEmpty ::= NUMBER *
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  281
                     {default} reduce 59

State 262:
          exprList_nonEmpty ::= funcexpr LSQBRACKET * LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  117

State 263:
          exprList_nonEmpty ::= funcexpr * LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (92) expr ::= funcexpr *

                    LSQBRACKET shift  262
                     {default} reduce 92

State 264:
          expr ::= expr PERIOD * NAME
          lvalue ::= expr PERIOD * NAME

                          NAME shift  159

State 265:
          bodyStmt ::= return_stmt * SEMICOLON

                     SEMICOLON shift  377

State 266:
          bodyStmt ::= break_stmt * SEMICOLON

                     SEMICOLON shift  378

State 267:
          bodyStmt ::= continue_stmt * SEMICOLON

                     SEMICOLON shift  379

State 268:
          bodyStmt ::= funcexprStmt * SEMICOLON

                     SEMICOLON shift  387

State 269:
          bodyStmt ::= assign_stmt * SEMICOLON

                     SEMICOLON shift  388

State 270:
          bodyStmt ::= cdef_stmt * SEMICOLON

                     SEMICOLON shift  389

State 271:
          bodyStmt ::= vdefAssign_stmt * SEMICOLON

                     SEMICOLON shift  390

State 272:
          bodyStmt ::= vdefAssignStatic_stmt * SEMICOLON

                     SEMICOLON shift  391

State 273:
          bodyStmt ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  392

State 274:
          blockStmt ::= lbracket error * RBRACKET

                      RBRACKET shift  395

State 275:
          stmt ::= error * SEMICOLON

                     SEMICOLON shift  400

State 276:
     (61) typedName ::= NAME *
          typedName ::= NAME * COLON expr

                         COLON shift  93
                     {default} reduce 61

State 277:
          lambdaExprStart ::= FUNCTION * LPAREN typedNameList RPAREN fdef_rettypes

                        LPAREN shift  99

State 278:
     (77) expr ::= NAME *
          funcexpr ::= NAME * LPAREN fArgs RPAREN

                        LPAREN shift  27
                     {default} reduce 77

State 279:
     (76) expr ::= KILLS *
          expr ::= KILLS * LPAREN fArgs RPAREN

                        LPAREN shift  28
                     {default} reduce 76

State 280:
          expr ::= expr PERIOD * NAME

                          NAME shift  402

State 281:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET * RSQBRACKET

                    RSQBRACKET shift  403

State 282:
          expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER * RSQBRACKET RSQBRACKET

                    RSQBRACKET shift  281

State 283:
          expr ::= funcexpr LSQBRACKET LSQBRACKET * NUMBER RSQBRACKET RSQBRACKET

                        NUMBER shift  282

State 284:
          expr ::= funcexpr LSQBRACKET * LSQBRACKET NUMBER RSQBRACKET RSQBRACKET

                    LSQBRACKET shift  283

State 285:
          expr ::= funcexpr * LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET
     (92) expr ::= funcexpr *

                    LSQBRACKET shift  284
                     {default} reduce 92

State 286:
     (20) fdef_rettypes ::= COLON exprList_nonEmpty *
          exprList_nonEmpty ::= exprList_nonEmpty * COMMA expr

                         COMMA shift  96
                     {default} reduce 20

State 287:
          fdef_header ::= FUNCTION NAME LPAREN typedNameList * RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList * RPAREN SEMICOLON

                        RPAREN shift  105

State 288:
          fdef_header ::= FUNCTION NAME * LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION NAME * LPAREN typedNameList RPAREN SEMICOLON

                        LPAREN shift  100

State 289:
          fdef_header ::= FUNCTION * NAME LPAREN typedNameList RPAREN fdef_rettypes
          fdecl_chunk ::= FUNCTION * NAME LPAREN typedNameList RPAREN SEMICOLON

                          NAME shift  288

State 290:
          import_chunk ::= IMPORT dottedName AS * NAME

                          NAME shift  404

State 291:
          dottedName ::= dottedName PERIOD * NAME

                          NAME shift  405

State 292:
          chunk ::= cdef_global_stmt * SEMICOLON

                     SEMICOLON shift  411

State 293:
          chunk ::= vdefAssign_global_stmt * SEMICOLON

                     SEMICOLON shift  412

State 294:
          chunk ::= vdef_stmt * SEMICOLON

                     SEMICOLON shift  413

State 295:
          chunk ::= import_chunk * SEMICOLON

                     SEMICOLON shift  417

State 296:
     (29) object_chunk ::= object_body RBRACKET SEMICOLON *

                     {default} reduce 29

State 297:
     (28) object_body ::= object_body method_chunk *

                     {default} reduce 28

State 298:
     (27) method_chunk ::= method_header stmt *

                     {default} reduce 27

State 299:
     (26) method_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 26

State 300:
     (25) object_body ::= object_body VAR typedNameList_nonEmpty SEMICOLON *

                     {default} reduce 25

State 301:
     (24) object_body ::= OBJECT NAME LBRACKET *

                     {default} reduce 24

State 302:
     (22) fdef_chunk ::= fdef_header stmt *

                     {default} reduce 22

State 303:
     (23) fdecl_chunk ::= FUNCTION NAME LPAREN typedNameList RPAREN SEMICOLON *

                     {default} reduce 23

State 304:
     (21) fdef_header ::= FUNCTION NAME LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 21

State 305:
     (79) expr ::= expr LSQBRACKET expr RSQBRACKET *

                     {default} reduce 79

State 306:
    (211) expr ::= KILLS LPAREN fArgs RPAREN *

                     {default} reduce 211

State 307:
     (90) funcexpr ::= NAME LPAREN fArgs RPAREN *

                     {default} reduce 90

State 308:
     (91) funcexpr ::= expr LPAREN fArgs RPAREN *

                     {default} reduce 91

State 309:
     (80) lambdaExprStart ::= FUNCTION LPAREN typedNameList RPAREN fdef_rettypes *

                     {default} reduce 80

State 310:
     (66) typedNameList ::= typedNameList_nonEmpty *

                     {default} reduce 66

State 311:
     (64) typedNameList_nonEmpty ::= typedName COMMA typedNameList_nonEmpty *

                     {default} reduce 64

State 312:
     (81) expr ::= lambdaExprStart stmt *

                     {default} reduce 81

State 313:
    (169) if_stmt ::= if_block else_header stmt *

                     {default} reduce 169

State 314:
    (176) case_chunks ::= case_chunk *

                     {default} reduce 176

State 315:
    (180) switchcase_block ::= switchcase_header RPAREN LBRACKET case_chunks default_chunk *

                     {default} reduce 180

State 316:
    (177) default_clause ::= DEFAULT COLON *

                     {default} reduce 177

State 317:
    (175) case_chunks ::= case_chunks case_chunk *

                     {default} reduce 175

State 318:
    (212) actionStmt ::= ACTIONNAME LPAREN fArgs RPAREN SEMICOLON *

                     {default} reduce 212

State 319:
    (209) return_stmt ::= RETURN exprList *

                     {default} reduce 209

State 320:
    (208) break_stmt ::= BREAK *

                     {default} reduce 208

State 321:
    (207) continue_stmt ::= CONTINUE *

                     {default} reduce 207

State 322:
    (206) foreach_stmt ::= foreach_header RPAREN stmt *

                     {default} reduce 206

State 323:
    (204) foreach_opener ::= FOREACH LPAREN *

                     {default} reduce 204

State 324:
    (203) for_stmt ::= for_header RPAREN stmt *

                     {default} reduce 203

State 325:
    (202) for_header ::= for_header2 for_action_stmt *

                     {default} reduce 202

State 326:
          for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty * COMMA for_action_stmt_nonEmpty
    (197) for_action_stmt_nonEmpty ::= for_action_stmt_nonEmpty COMMA for_action_stmt_nonEmpty *

                     {default} reduce 197

State 327:
    (196) for_action_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 196

State 328:
    (195) for_action_stmt_nonEmpty ::= funcexprStmt *

                     {default} reduce 195

State 329:
    (201) for_header2 ::= for_header1 expr SEMICOLON *

                     {default} reduce 201

State 330:
    (200) for_header1 ::= for_opener for_init_stmt SEMICOLON *

                     {default} reduce 200

State 331:
          for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty * COMMA for_init_stmt_nonEmpty
    (192) for_init_stmt_nonEmpty ::= for_init_stmt_nonEmpty COMMA for_init_stmt_nonEmpty *

                     {default} reduce 192

State 332:
    (191) for_init_stmt_nonEmpty ::= assign_stmt *

                     {default} reduce 191

State 333:
    (190) for_init_stmt_nonEmpty ::= cdef_stmt *

                     {default} reduce 190

State 334:
    (189) for_init_stmt_nonEmpty ::= vdefAssign_stmt *

                     {default} reduce 189

State 335:
    (188) for_init_stmt_nonEmpty ::= vdef_stmt *

                     {default} reduce 188

State 336:
    (187) for_opener ::= FOR LPAREN *

                     {default} reduce 187

State 337:
    (186) while_stmt ::= while_header RPAREN stmt *

                     {default} reduce 186

State 338:
    (184) while_start ::= WHILE *

                     {default} reduce 184

State 339:
    (183) switchcase_stmt ::= switchcase_block RBRACKET *

                     {default} reduce 183

State 340:
     (56) bodyStmtList ::= bodyStmt *

                     {default} reduce 56

State 341:
    (172) case_clause ::= case_start exprList_nonEmpty COLON *

                     {default} reduce 172

State 342:
    (171) case_start ::= CASE *

                     {default} reduce 171

State 343:
    (166) if_block ::= if_block elif_header RPAREN stmt *

                     {default} reduce 166

State 344:
    (164) elif_start ::= ELSE IF *

                     {default} reduce 164

State 345:
    (163) if_block ::= if_header RPAREN stmt *

                     {default} reduce 163

State 346:
    (161) if_start ::= IF *

                     {default} reduce 161

State 347:
    (160) once_stmt ::= once_block *

                     {default} reduce 160

State 348:
    (159) once_block ::= once_nocond stmt *

                     {default} reduce 159

State 349:
    (157) once_block ::= once_header RPAREN stmt *

                     {default} reduce 157

State 350:
    (155) once_start ::= ONCE *

                     {default} reduce 155

State 351:
    (143) assign_stmt ::= DEC lvalue *

                     {default} reduce 143

State 352:
    (141) assign_stmt ::= INC lvalue *

                     {default} reduce 141

State 353:
    (138) lvalueList_nonEmpty ::= lvalueList_nonEmpty COMMA lvalue *

                     {default} reduce 138

State 354:
    (144) assign_stmt ::= lvalue DEC *

                     {default} reduce 144

State 355:
    (142) assign_stmt ::= lvalue INC *

                     {default} reduce 142

State 356:
     (68) nameList_nonEmpty ::= nameList_nonEmpty COMMA NAME *

                     {default} reduce 68

State 357:
     (67) nameList_nonEmpty ::= NAME *

                     {default} reduce 67

State 358:
     (96) expr ::= LSQBRACKET exprList_nonEmpty commaSkippable RSQBRACKET *

                     {default} reduce 96

State 359:
    (210) expr ::= CONDITIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 210

State 360:
    (213) expr ::= ACTIONNAME LPAREN fArgs RPAREN *

                     {default} reduce 213

State 361:
     (86) fArgs_nonEmpty ::= fArgs_nonEmpty COMMA fArg *

                     {default} reduce 86

State 362:
     (85) fArgs_nonEmpty ::= fArg *

                     {default} reduce 85

State 363:
     (83) fArg ::= STRING *

                     {default} reduce 83

State 364:
    (104) expr ::= LIST LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 104

State 365:
    (103) expr ::= VARRAY LPAREN exprList_nonEmpty commaSkippable RPAREN *

                     {default} reduce 103

State 366:
    (102) expr ::= STATTXTTBL LPAREN STRING RPAREN *

                     {default} reduce 102

State 367:
    (101) expr ::= LOCATION LPAREN STRING RPAREN *

                     {default} reduce 101

State 368:
    (100) expr ::= SWITCH LPAREN STRING RPAREN *

                     {default} reduce 100

State 369:
     (99) expr ::= UNIT LPAREN STRING RPAREN *

                     {default} reduce 99

State 370:
     (98) expr ::= MAPSTRING LPAREN STRING RPAREN *

                     {default} reduce 98

State 371:
     (97) expr ::= L2V LPAREN expr RPAREN *

                     {default} reduce 97

State 372:
     (69) exprList_nonEmpty ::= funcexpr LSQBRACKET LSQBRACKET numList_nonEmpty RSQBRACKET RSQBRACKET *

                     {default} reduce 69

State 373:
     (60) numList_nonEmpty ::= numList_nonEmpty COMMA NUMBER *

                     {default} reduce 60

State 374:
     (93) expr ::= LPAREN expr RPAREN *

                     {default} reduce 93

State 375:
     (58) bodyStmtList ::= bodyStmtList error *

                     {default} reduce 58

State 376:
     (57) bodyStmtList ::= bodyStmtList bodyStmt *

                     {default} reduce 57

State 377:
     (55) bodyStmt ::= return_stmt SEMICOLON *

                     {default} reduce 55

State 378:
     (54) bodyStmt ::= break_stmt SEMICOLON *

                     {default} reduce 54

State 379:
     (53) bodyStmt ::= continue_stmt SEMICOLON *

                     {default} reduce 53

State 380:
     (52) bodyStmt ::= switchcase_stmt *

                     {default} reduce 52

State 381:
     (51) bodyStmt ::= foreach_stmt *

                     {default} reduce 51

State 382:
     (50) bodyStmt ::= for_stmt *

                     {default} reduce 50

State 383:
     (49) bodyStmt ::= while_stmt *

                     {default} reduce 49

State 384:
     (48) bodyStmt ::= if_stmt *

                     {default} reduce 48

State 385:
     (47) bodyStmt ::= once_stmt *

                     {default} reduce 47

State 386:
     (46) bodyStmt ::= actionStmt *

                     {default} reduce 46

State 387:
     (45) bodyStmt ::= funcexprStmt SEMICOLON *

                     {default} reduce 45

State 388:
     (44) bodyStmt ::= assign_stmt SEMICOLON *

                     {default} reduce 44

State 389:
     (43) bodyStmt ::= cdef_stmt SEMICOLON *

                     {default} reduce 43

State 390:
     (42) bodyStmt ::= vdefAssign_stmt SEMICOLON *

                     {default} reduce 42

State 391:
     (41) bodyStmt ::= vdefAssignStatic_stmt SEMICOLON *

                     {default} reduce 41

State 392:
     (40) bodyStmt ::= vdef_stmt SEMICOLON *

                     {default} reduce 40

State 393:
     (39) bodyStmt ::= SEMICOLON *

                     {default} reduce 39

State 394:
     (38) bodyStmt ::= blockStmt *

                     {default} reduce 38

State 395:
     (35) blockStmt ::= lbracket error RBRACKET *

                     {default} reduce 35

State 396:
     (34) blockStmt ::= blockStmtSub rbracket *

                     {default} reduce 34

State 397:
     (33) rbracket ::= RBRACKET *

                     {default} reduce 33

State 398:
     (32) lbracket ::= LBRACKET *

                     {default} reduce 32

State 399:
     (31) stmt ::= bodyStmt *

                     {default} reduce 31

State 400:
     (30) stmt ::= error SEMICOLON *

                     {default} reduce 30

State 401:
     (75) expr ::= NUMBER *

                     {default} reduce 75

State 402:
     (78) expr ::= expr PERIOD NAME *

                     {default} reduce 78

State 403:
     (70) expr ::= funcexpr LSQBRACKET LSQBRACKET NUMBER RSQBRACKET RSQBRACKET *

                     {default} reduce 70

State 404:
     (17) import_chunk ::= IMPORT dottedName AS NAME *

                     {default} reduce 17

State 405:
     (16) dottedName ::= dottedName PERIOD NAME *

                     {default} reduce 16

State 406:
     (14) dottedName ::= NAME *

                     {default} reduce 14

State 407:
     (15) dottedName ::= precedingDots NAME *

                     {default} reduce 15

State 408:
     (13) precedingDots ::= precedingDots PERIOD *

                     {default} reduce 13

State 409:
     (12) precedingDots ::= PERIOD *

                     {default} reduce 12

State 410:
     (11) chunk ::= blockStmt *

                     {default} reduce 11

State 411:
     (10) chunk ::= cdef_global_stmt SEMICOLON *

                     {default} reduce 10

State 412:
      (9) chunk ::= vdefAssign_global_stmt SEMICOLON *

                     {default} reduce 9

State 413:
      (8) chunk ::= vdef_stmt SEMICOLON *

                     {default} reduce 8

State 414:
      (7) chunk ::= object_chunk *

                     {default} reduce 7

State 415:
      (6) chunk ::= fdecl_chunk *

                     {default} reduce 6

State 416:
      (5) chunk ::= fdef_chunk *

                     {default} reduce 5

State 417:
      (4) chunk ::= import_chunk SEMICOLON *

                     {default} reduce 4

State 418:
      (3) chunks ::= chunks error *

                     {default} reduce 3

State 419:
      (2) chunks ::= chunks chunk *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: IFX
    2: ELSE
    3: ASSIGN
    4: QMARK
    5: COMMA
    6: LOR
    7: LAND
    8: LNOT
    9: EQ
   10: LE
   11: LT
   12: GE
   13: GT
   14: NE
   15: BITOR
   16: BITXOR
   17: BITAND
   18: LSHIFT
   19: RSHIFT
   20: PLUS
   21: MINUS
   22: DIVIDE
   23: MULTIPLY
   24: MOD
   25: UNARY
   26: BITNOT
   27: LPAREN
   28: LSQBRACKET
   29: PERIOD
   30: SEMICOLON
   31: NAME
   32: IMPORT
   33: AS
   34: COLON
   35: FUNCTION
   36: RPAREN
   37: OBJECT
   38: LBRACKET
   39: VAR
   40: RBRACKET
   41: NUMBER
   42: RSQBRACKET
   43: SUBSCRIPT
   44: KILLS
   45: MEMBER
   46: STRING
   47: FUNCCALL
   48: L2V
   49: MAPSTRING
   50: UNIT
   51: SWITCH
   52: LOCATION
   53: STATTXTTBL
   54: VARRAY
   55: LIST
   56: STATIC
   57: CONST
   58: INC
   59: DEC
   60: IADD
   61: ISUB
   62: IMUL
   63: IDIV
   64: IMOD
   65: ILSH
   66: IRSH
   67: IBND
   68: IBOR
   69: IBXR
   70: ONCE
   71: IF
   72: SWITCHCASE
   73: CASE
   74: DEFAULT
   75: WHILE
   76: FOR
   77: FOREACH
   78: CONTINUE
   79: BREAK
   80: RETURN
   81: CONDITIONNAME
   82: ACTIONNAME
   83: error:
   84: program: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   85: chunks: <lambda> IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   86: chunk: IMPORT FUNCTION OBJECT LBRACKET VAR CONST
   87: import_chunk: IMPORT
   88: fdef_chunk: FUNCTION
   89: fdecl_chunk: FUNCTION
   90: object_chunk: OBJECT
   91: vdef_stmt: VAR
   92: vdefAssign_global_stmt: VAR
   93: cdef_global_stmt: CONST
   94: blockStmt: LBRACKET
   95: precedingDots: PERIOD
   96: dottedName: PERIOD NAME
   97: fdef_rettypes: <lambda> COLON
   98: exprList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
   99: fdef_header: FUNCTION
  100: typedNameList: <lambda> NAME
  101: stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  102: object_body: OBJECT
  103: typedNameList_nonEmpty: NAME
  104: method_header: FUNCTION
  105: method_chunk: FUNCTION
  106: bodyStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  107: lbracket: LBRACKET
  108: rbracket: RBRACKET
  109: blockStmtSub: LBRACKET
  110: bodyStmtList: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET SEMICOLON NAME FUNCTION LBRACKET VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST STATIC CONST INC DEC ONCE IF SWITCHCASE WHILE FOR FOREACH CONTINUE BREAK RETURN CONDITIONNAME ACTIONNAME
  111: vdefAssignStatic_stmt: STATIC
  112: vdefAssign_stmt: VAR
  113: cdef_stmt: CONST
  114: assign_stmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  115: funcexprStmt: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  116: actionStmt: ACTIONNAME
  117: once_stmt: ONCE
  118: if_stmt: IF
  119: while_stmt: WHILE
  120: for_stmt: FOR
  121: foreach_stmt: FOREACH
  122: switchcase_stmt: SWITCHCASE
  123: continue_stmt: CONTINUE
  124: break_stmt: BREAK
  125: return_stmt: RETURN
  126: numList_nonEmpty: NUMBER
  127: typedName: NAME
  128: expr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  129: nameList_nonEmpty: NAME
  130: funcexpr: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  131: exprList: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  132: lambdaExprStart: FUNCTION
  133: fArg: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  134: fArgs_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  135: fArgs: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS STRING L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  136: commaSkippable: <lambda> COMMA
  137: lvalue: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  138: lvalueList_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONDITIONNAME ACTIONNAME
  139: once_start: ONCE
  140: once_header: ONCE
  141: once_block: ONCE
  142: once_nocond: ONCE
  143: if_start: IF
  144: if_header: IF
  145: if_block: IF
  146: elif_start: ELSE
  147: elif_header: ELSE
  148: else_header: ELSE
  149: switchcase_header: SWITCHCASE
  150: case_start: CASE
  151: case_clause: CASE
  152: case_chunk: CASE
  153: case_chunks: CASE
  154: default_clause: DEFAULT
  155: default_chunk: DEFAULT
  156: switchcase_block: SWITCHCASE
  157: while_start: WHILE
  158: while_header: WHILE
  159: for_opener: FOR
  160: for_init_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  161: for_init_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION VAR NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST CONST INC DEC CONDITIONNAME ACTIONNAME
  162: for_action_stmt_nonEmpty: LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  163: for_action_stmt: <lambda> LNOT PLUS MINUS BITNOT LPAREN LSQBRACKET NAME FUNCTION NUMBER KILLS L2V MAPSTRING UNIT SWITCH LOCATION STATTXTTBL VARRAY LIST INC DEC CONDITIONNAME ACTIONNAME
  164: for_header1: FOR
  165: for_header2: FOR
  166: for_header: FOR
  167: foreach_opener: FOREACH
  168: foreach_header: FOREACH
